{"version":3,"sources":["components/toast/toast.ts"],"names":[],"mappings":"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","file":"components/toast/toast.js","sourcesContent":["import {Injectable, ComponentRef, DynamicComponentLoader, ApplicationRef, Inject, Optional, provide, ReflectiveInjector, ViewContainerRef} from '@angular/core';\r\nimport {ViewContainerRef_} from '@angular/core/src/linker/view_container_ref';\r\nimport {Md2ToastComponent} from './toast.component';\r\n\r\n@Injectable()\r\nexport class Md2Toast {\r\n  private hideDelay: number = 3000;\r\n  private index: number = 0;\r\n\r\n  container: ComponentRef<any>;\r\n\r\n  constructor(private loader: DynamicComponentLoader, private appRef: ApplicationRef) { }\r\n\r\n  show(toastObj: string | { message: string, hideDelay: number }) {\r\n    let toast;\r\n    if (typeof toastObj === 'string') {\r\n      toast = new Toast(toastObj);\r\n    } else if (typeof toastObj === 'object') {\r\n      toast = new Toast(toastObj.message);\r\n      this.hideDelay = toastObj.hideDelay;\r\n    }\r\n    if (toast) {\r\n      if (!this.container) {\r\n        let appElement: ViewContainerRef = new ViewContainerRef_(this.appRef['_rootComponents'][0]._hostElement);\r\n        let bindings = ReflectiveInjector.resolve([]);\r\n        this.loader.loadNextToLocation(Md2ToastComponent, appElement, bindings).then((ref) => {\r\n          this.container = ref;\r\n          this.setupToast(toast);\r\n        });\r\n      } else {\r\n        this.setupToast(toast);\r\n      }\r\n    }\r\n  }\r\n\r\n  startTimeout(toastId: number) {\r\n    setTimeout(() => {\r\n      this.clear(toastId);\r\n    }, this.hideDelay);\r\n  }\r\n\r\n  setupToast(toast: Toast) {\r\n    toast.id = ++this.index;\r\n    this.container.instance.add(toast);\r\n    this.startTimeout(toast.id);\r\n  }\r\n\r\n  clear(toastId: number) {\r\n    if (this.container) {\r\n      let instance = this.container.instance;\r\n      instance.remove(toastId);\r\n      if (!instance.isToast()) { this.hide(); }\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.container.destroy();\r\n    this.container = null;\r\n  }\r\n}\r\n\r\nexport class Toast {\r\n  id: number;\r\n  message: string;\r\n  constructor(message: string) { this.message = message; }\r\n}\r\n"],"sourceRoot":"/source/"}