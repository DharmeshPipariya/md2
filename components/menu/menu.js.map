{"version":3,"sources":["components/menu/menu.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAA8D,eAAe,CAAC,CAAA;AA6B9E;IAKE,YAAmB,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;QAH9B,cAAS,GAAY,KAAK,CAAC;IAGO,CAAC;IAE3C,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC/C,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IAED,WAAW;QACT,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAEO,eAAe,CAAC,OAAY;QAClC,MAAM,CAAC,CAAC,CAAM;YACZ,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC;YACpB,GAAG,CAAC;gBACF,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAAC,MAAM,CAAC;gBAAC,CAAC;gBACxH,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YACzB,CAAC,QAAQ,IAAI,EAAE;YACf,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,CAAQ;QAClB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAEO,UAAU;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;AACH,CAAC;AAlCC;IAAC,YAAK,CAAC,YAAY,CAAC;;0CAAA;AA5BtB;IAAC,gBAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,QAAQ,EAAE;;;;;;;;GAQT;QACD,MAAM,EAAE,CAAC;;;;;;;GAOR,CAAC;QACF,IAAI,EAAE;YACJ,MAAM,EAAE,MAAM;YACd,kBAAkB,EAAE,MAAM;YAC1B,cAAc,EAAE,WAAW;SAC5B;QACD,aAAa,EAAE,wBAAiB,CAAC,IAAI;KACtC,CAAC;;WAAA;AAEW,eAAO,UAmCnB,CAAA","file":"components/menu/menu.js","sourcesContent":["import {Component, Input, ElementRef, ViewEncapsulation} from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"md2-menu\",\r\n  template: `\r\n    <div class=\"md2-menu-button\" type=\"button\" (click)=\"toggleMenu()\">\r\n      <span *ngIf=\"menuLabel\" class=\"md2-menu-label\" [innerHtml]=\"menuLabel\"></span>\r\n      <ng-content select=\"menu-label\"></ng-content>\r\n    </div>\r\n    <div class=\"md2-menu-content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .md2-menu { position: relative; display: inline-block; }\r\n    .md2-menu .md2-menu-button { border-radius: 3px; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; color: currentColor; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: relative; outline: 0; border: 0; display: inline-block; padding: 0 6px; line-height: 36px; min-height: 36px; background: 0 0; white-space: nowrap; font-weight: 500; font-size: 14px; font-style: inherit; font-variant: inherit; font-family: inherit; text-decoration: none; cursor: pointer; overflow: hidden; }\r\n    .md2-menu .md2-menu-content { position: absolute; top: 0; left: 0; display: inline-block; background: #fff; list-style: none; min-width: 100px; max-height: 304px; overflow-y: auto; padding: 8px 0; margin: 0; -moz-transform: scale(0); -ms-transform: scale(0); -o-transform: scale(0); -webkit-transform: scale(0); transform: scale(0); -moz-transform-origin: left top; -ms-transform-origin: left top; -o-transform-origin: left top; -webkit-transform-origin: left top; transform-origin: left top; -moz-transition: all .4s linear; -o-transition: all .4s linear; -webkit-transition: all .4s linear; transition: all .4s linear; -moz-transition-duration: 0.2s; -o-transition-duration: 0.2s; -webkit-transition-duration: 0.2s; transition-duration: 0.2s; box-shadow: 0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12); z-index: 1; border-radius: 2px; }\r\n    .md2-menu.open .md2-menu-content { -moz-transform: scale(1); -ms-transform: scale(1); -o-transform: scale(1); -webkit-transform: scale(1); transform: scale(1); }\r\n    .md2-menu .md2-menu-item { position: relative; display: block; padding: 0 16px; line-height: 36px; color: rgba(0,0,0,.87); cursor: pointer; text-decoration: none; transition: 0.3s; }\r\n    .md2-menu .md2-menu-item:hover { background-color: rgba(158,158,158,0.2); }\r\n  `],\r\n  host: {\r\n    'role': 'menu',\r\n    '[class.md2-menu]': 'true',\r\n    '[class.open]': 'isVisible'\r\n  },\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class Md2Menu {\r\n  @Input('menu-label') menuLabel: string;\r\n  private isVisible: boolean = false;\r\n  private clickHandler: any;\r\n\r\n  constructor(public element: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    this.clickHandler = this.getClickHandler(this);\r\n    document.addEventListener('click', this.clickHandler);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.removeEventListener('click', this.clickHandler);\r\n    this.clickHandler = null;\r\n  }\r\n\r\n  private getClickHandler(context: any) {\r\n    return (e: any) => {\r\n      let elem = e.target;\r\n      do {\r\n        if (elem === context.element.nativeElement && elem.className && elem.className.indexOf('md2-menu-item') < 0) { return; }\r\n        elem = elem.parentNode;\r\n      } while (elem);\r\n      context.isVisible = false;\r\n    };\r\n  }\r\n\r\n  onBlurEvent(e: Event) {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  private toggleMenu(): void {\r\n    this.isVisible = !this.isVisible;\r\n  }\r\n}"],"sourceRoot":"/source/"}