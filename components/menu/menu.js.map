{"version":3,"sources":["components/menu/menu.ts"],"names":[],"mappings":"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","file":"components/menu/menu.js","sourcesContent":["//import {Component, Input, HostListener, ElementRef, ViewEncapsulation} from \"@angular/core\";\r\n//import {NgClass} from 'angular2/common';\r\n\r\n//@Component({\r\n//  selector: \"md2-menu\",\r\n//  template: `\r\n//    <div class=\"md2-menu-button\" type=\"button\"><!-- (click)=\"toggleMenu($event)\"-->\r\n//      <span *ngIf=\"menuLabel\" class=\"md2-menu-label\" [innerHtml]=\"menuLabel\"></span>\r\n//      <ng-content select=\"menu-label\"></ng-content>\r\n//    </div>\r\n//    <div class=\"md2-menu-content\" [ngClass]=\"direction\"><!-- (click)=\"hide($event)\"-->\r\n//      <ng-content></ng-content>\r\n//    </div>\r\n//  `,\r\n//  styles: [`\r\n//    .md2-menu { position: relative; display: inline-block; }\r\n//    .md2-menu .md2-menu-button { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; color: currentColor; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: relative; outline: 0; border: 0; display: inline-block; line-height: 36px; min-height: 36px; background: 0 0; white-space: nowrap; font-weight: 500; font-size: 14px; font-style: inherit; font-variant: inherit; font-family: inherit; text-decoration: none; cursor: pointer; overflow: hidden; }\r\n//    .md2-menu .md2-menu-content { position: absolute; top: 0; left: 0; display: inline-block; background: #fff; list-style: none; min-width: 100px; padding: 8px 0; margin: 0; -moz-transform: scale(0); -ms-transform: scale(0); -o-transform: scale(0); -webkit-transform: scale(0); transform: scale(0); -moz-transform-origin: left top; -ms-transform-origin: left top; -o-transform-origin: left top; -webkit-transform-origin: left top; transform-origin: left top; -moz-transition: all .4s linear; -o-transition: all .4s linear; -webkit-transition: all .4s linear; transition: all .4s linear; -moz-transition-duration: 0.2s; -o-transition-duration: 0.2s; -webkit-transition-duration: 0.2s; transition-duration: 0.2s; box-shadow: 0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12); z-index: 1; border-radius: 2px; }\r\n//    .md2-menu .md2-menu-content.right { left: auto; right: 0; -moz-transform-origin: right top; -ms-transform-origin: right top; -o-transform-origin: right top; -webkit-transform-origin: right top; transform-origin: right top; }\r\n//    .md2-menu .md2-menu-content.top { top: auto; bottom: 0; -moz-transform-origin: left bottom; -ms-transform-origin: left bottom; -o-transform-origin: left bottom; -webkit-transform-origin: left bottom; transform-origin: left bottom; }\r\n//    .md2-menu .md2-menu-content.top.right { -moz-transform-origin: right bottom; -ms-transform-origin: right bottom; -o-transform-origin: right bottom; -webkit-transform-origin: right bottom; transform-origin: right bottom; }\r\n//    .md2-menu.open > .md2-menu-content { -moz-transform: scale(1); -ms-transform: scale(1); -o-transform: scale(1); -webkit-transform: scale(1); transform: scale(1); }\r\n//    .md2-menu .md2-menu-item { position: relative; display: block; padding: 0 16px; line-height: 36px; color: rgba(0,0,0,.87); cursor: pointer; text-decoration: none; transition: 0.3s; }\r\n//    .md2-menu .md2-menu-item:hover { background-color: rgba(158,158,158,0.2); }\r\n//  `],\r\n//  host: {\r\n//    'role': 'menu',\r\n//    '[class.md2-menu]': 'true',\r\n//    '[class.open]': 'isVisible'\r\n//  },\r\n//  encapsulation: ViewEncapsulation.None\r\n//})\r\n\r\n//export class Md2Menu {\r\n\r\n//  @Input() direction: string;\r\n//  @Input('menu-label') menuLabel: string;\r\n//  private isVisible: boolean = false;\r\n\r\n//  constructor(private element: ElementRef) { }\r\n\r\n//  private hide(e) {\r\n//    let elem = e.target;\r\n//    do {\r\n//      if (elem.className && elem.className.indexOf('md2-menu-item') < 0) { return; }\r\n//      elem = elem.parentNode;\r\n//    } while (elem);\r\n//    this.isVisible = false;\r\n//  }\r\n\r\n\r\n\r\n//  private toggleMenu(event): void {\r\n//    //event.preventDefault();\r\n//    //event.stopPropagation();\r\n//    this.isVisible = !this.isVisible;\r\n//  }\r\n\r\n//  @HostListener('click', ['$event'])\r\n//  public onClick(e: MouseEvent) {\r\n//    console.log(e);\r\n//    this.isVisible = !this.isVisible;\r\n//    //if (closestByClass(e.target, 'some-class')) {\r\n//    //  // Do something\r\n//    //} else {\r\n//    //  // Do something else\r\n//    //}\r\n//  }\r\n\r\n//  @HostListener('document:click', ['$event.target'])\r\n//  public onDocumentClick(targetElement) {\r\n//    let clickedInside = this.element.nativeElement.contains(targetElement);\r\n//    if (!clickedInside) {\r\n//      this.isVisible = false;\r\n//    }\r\n//  }\r\n\r\n//  private _closest(el, clazz) {\r\n//    while (el.className != clazz) {\r\n//      el = el.parentNode;\r\n//      if (!el) {\r\n//        return null;\r\n//      }\r\n//    }\r\n//    return el;\r\n//  }\r\n//  //  var closest = function (el, fn) {\r\n//  //  return el && (fn(el) ? el : closest(el.parentNode, fn));\r\n//  //}\r\n//  //  var nav = closest(srcEl[0], function (el) {\r\n//  //  // Here's the beauty of this function, we have control\r\n//  //  // on the target, here we're using class name `.nav`\r\n//  //  return el.className === 'nav';\r\n//  //});\r\n//  //  var nav = closest(srcEl[0], function (el) {\r\n//  //  return el.id === 'nav-id';\r\n//  //});\r\n\r\n//  //// Here it's the tag <nav>\r\n//  //var nav = closest(srcEl[0], function (el) {\r\n//  //  return el.tagName.toLowerCase() === 'nav';\r\n//  //});\r\n//}\r\n\r\n\r\nimport { ContentChild, Directive, ElementRef, EventEmitter, Host, HostListener, OnDestroy, Output } from \"@angular/core\";\r\n\r\n@Directive({ selector: \"[md2-menu-not-closable]\" })\r\nexport class Md2MenuNotClosable {\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  contains(element: HTMLElement) {\r\n    let thisElement: HTMLElement = this.elementRef.nativeElement;\r\n    return thisElement.contains(element);\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: \"[md2-menu]\",\r\n  host: {\r\n    'role': 'menu',\r\n    '[class.md2-menu]': 'true',\r\n    '[class.open]': 'isVisible'\r\n  }\r\n})\r\nexport class Md2Menu {\r\n\r\n  private isVisible: boolean = false;\r\n\r\n  @ContentChild(Md2MenuNotClosable) notClosable: Md2MenuNotClosable;\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  open() { this.isVisible = true; }\r\n\r\n  close() { this.isVisible = false; }\r\n\r\n  isInClosableZone(element: HTMLElement) {\r\n    if (!this.notClosable)\r\n      return false;\r\n\r\n    return this.notClosable.contains(element);\r\n  }\r\n\r\n}\r\n\r\n@Directive({ selector: \"[md2-menu-open]\" })\r\nexport class Md2MenuOpen implements OnDestroy {\r\n\r\n  private close = (event: MouseEvent) => {\r\n    if (!this.menu.isInClosableZone(<HTMLElement>event.target) && event.target !== this.elementRef.nativeElement) {\r\n      this.menu.close();\r\n      document.removeEventListener(\"click\", this.close);\r\n    }\r\n  };\r\n\r\n  constructor( @Host() public menu: Md2Menu, private elementRef: ElementRef) { }\r\n\r\n  @HostListener('click') open() {\r\n    this.menu.open();\r\n    document.addEventListener(\"click\", this.close, true);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.removeEventListener(\"click\", this.close);\r\n  }\r\n\r\n}\r\n\r\nexport const MENU_DIRECTIVES = [Md2MenuNotClosable, Md2Menu, Md2MenuOpen];"],"sourceRoot":"/source/"}