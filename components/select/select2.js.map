{"version":3,"sources":["components/select/select2.ts"],"names":[],"mappings":"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","file":"components/select/select2.js","sourcesContent":["import {AfterContentInit, Component, ContentChildren, EventEmitter, HostBinding, Input, OnInit, Optional, Output, Provider, Query, QueryList, ViewEncapsulation, forwardRef, ElementRef } from '@angular/core';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/common';\r\n\r\nconst MD2_SELECT_CONTROL_VALUE_ACCESSOR = new Provider(NG_VALUE_ACCESSOR, {\r\n  useExisting: forwardRef(() => Md2Select),\r\n  multi: true\r\n});\r\n\r\nvar _uniqueIdCounter = 0;\r\n\r\n@Component({\r\n  selector: 'md2-option',\r\n  template: '<div class=\"md2-option-text\"><ng-content></ng-content></div>',\r\n  styles: [`\r\n    md2-option { cursor: pointer; position: relative; display: block; align-items: center; width: auto; -moz-transition: background 0.15s linear; -o-transition: background 0.15s linear; -webkit-transition: background 0.15s linear; transition: background 0.15s linear; padding: 0 16px; height: 48px; line-height: 48px; }\r\n    md2-option.md2-option-selected { color: #106cc8; }\r\n    md2-option:hover, md2-option.md2-option-focused { background: #eeeeee; }\r\n    md2-option.md2-option-disabled, md2-option.md2-option-disabled:hover { color: rgba(189,189,189,0.87); cursor: default; background: transparent; }\r\n    md2-option .md2-option-text { width: auto; white-space: nowrap; overflow: hidden; -ms-text-overflow: ellipsis; -o-text-overflow: ellipsis; text-overflow: ellipsis; font-size: 16px; }\r\n  `],\r\n  host: {\r\n    'role': 'select-option',\r\n    '(click)': 'onClick($event)'\r\n  },\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class Md2Option {\r\n\r\n  @HostBinding('class.md2-option-focused') private _isFocused: boolean;\r\n\r\n  private _selected: boolean = false;\r\n  private _value: any = null;\r\n\r\n  @HostBinding('class.md2-option-selected') @Input() get selected(): boolean { return this._selected; }\r\n  set selected(selected: boolean) {\r\n    this._selected = selected;\r\n  }\r\n\r\n  @Input() get value(): any { return this._value; }\r\n  set value(value: any) {\r\n    if (this._value != value) {\r\n      this._value = value;\r\n    }\r\n  }\r\n\r\n  @HostBinding('class.md2-option-disabled')\r\n  @Input() disabled: boolean = false;\r\n\r\n  onClick(event: Event) {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      return;\r\n    }\r\n\r\n    //this.selected = true;\r\n  }\r\n\r\n  onInputFocus() { this._isFocused = true; }\r\n\r\n  onInputBlur() { this._isFocused = false; }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'md2-select',\r\n  template: `\r\n    <div class=\"md2-select-container\">\r\n      <span *ngIf=\"selectedValue.length < 1\" class=\"md2-select-placeholder\">Placeholder</span>\r\n      <span *ngIf=\"selectedValue.length > 0\" class=\"md2-select-value\" [innerHtml]=\"selectedValue\"></span>\r\n      <i class=\"md2-select-icon\"></i>\r\n    </div>\r\n    <ul class=\"md2-select-menu\">\r\n      <li *ngFor=\"let option of options\" [class]=\"option.headerClass\" [class]=\"'md2-option-item'\" [class.selected]=\"option.selected\" [class.disabled]=\"option.disabled\" (click)=\"open($event,option)\">\r\n        <span>{{option.value}}</span>\r\n      </li>\r\n    </ul>\r\n    <!--<div class=\"md2-select-menu\">\r\n      <ng-content></ng-content>    \r\n    </div>-->\r\n  `,\r\n  styles: [`\r\n    md2-select { position: relative; display: block; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; }\r\n    md2-select:focus { outline: none; }\r\n    md2-select .md2-select-container { display: flex; width: 100%; align-items: center; padding: 2px 0 1px; border-bottom: 1px solid rgba(0, 0, 0, 0.38); position: relative; -moz-box-sizing: content-box; -webkit-box-sizing: content-box; box-sizing: content-box; min-width: 64px; min-height: 26px; flex-grow: 1; cursor: pointer; }\r\n    md2-select:focus .md2-select-container { padding-bottom: 0; border-bottom: 2px solid #106cc8; }\r\n    md2-select.md2-select-disabled .md2-select-container { color: rgba(0,0,0,0.38); }\r\n    md2-select.md2-select-disabled:focus .md2-select-container { padding-bottom: 1px; border-bottom: 1px solid rgba(0, 0, 0, 0.38); }\r\n    md2-select .md2-select-container > span:not(.md2-select-icon) { max-width: 100%; -ms-flex: 1 1 auto; -webkit-flex: 1 1 auto; flex: 1 1 auto; -ms-text-overflow: ellipsis; -o-text-overflow: ellipsis; text-overflow: ellipsis; overflow: hidden; }\r\n    md2-select .md2-select-container .md2-select-icon { display: block; -webkit-align-items: flex-end; -ms-flex-align: end; align-items: flex-end; text-align: end; width: 0; height: 0; border-left: 6px solid transparent; border-right: 6px solid transparent; border-top: 6px solid rgba(0, 0, 0, 0.60); margin: 0 4px; }\r\n    md2-select .md2-select-container .md2-select-placeholder { color: rgba(0, 0, 0, 0.38); }\r\n    md2-select .md2-select-container .md2-select-value { white-space: nowrap; }\r\n    md2-select .md2-select-menu { position: absolute; left: 0; top: 100%; display: block; z-index: 10; -ms-flex-direction: column; -webkit-flex-direction: column; flex-direction: column; width: 100%; margin: 0; padding: 8px 0; box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12); max-height: 256px; min-height: 48px; overflow-y: auto; -moz-transform: scale(1); -ms-transform: scale(1); -o-transform: scale(1); -webkit-transform: scale(1); transform: scale(1); background: #fff; }\r\n  `],\r\n  host: {\r\n    'role': 'select',\r\n    '[id]': 'id',\r\n    '[tabindex]': 'disabled ? -1 : tabindex',\r\n    '[attr.aria-disabled]': 'disabled'\r\n  },\r\n  providers: [MD2_SELECT_CONTROL_VALUE_ACCESSOR],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class Md2Select implements AfterContentInit, ControlValueAccessor {\r\n\r\n  selectedValue = '';\r\n  private _value: any = null;\r\n\r\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Input() id: string = 'md2-select-' + _uniqueIdCounter++;\r\n  @Input() tabindex: number = 0;\r\n\r\n\r\n\r\n\r\n  @HostBinding('class.md2-select-disabled')\r\n  @Input() disabled: boolean = false;\r\n\r\n  @Input() get value(): any { return this._value; }\r\n  set value(value: any) {\r\n    if (this._value != value) {\r\n      this._value = value;\r\n    }\r\n  }\r\n\r\n  //@Input() get selected() { return this._selected; }\r\n  //set selected(selected: Md2Option) {\r\n  //  this._selected = selected;\r\n  //  this.value = selected ? selected.value : null;\r\n  //  if (selected && !selected.selected) {\r\n  //    selected.selected = true;\r\n  //    this.selectedValue = document.getElementById(selected.id).innerHTML;\r\n  //  }\r\n  //}\r\n\r\n  ngAfterContentInit() {\r\n    //this._isInitialized = true;\r\n  }\r\n\r\n  initialized: boolean;\r\n\r\n  options: Md2Option[];\r\n\r\n  constructor(private el: ElementRef, @Query(Md2Option) options: QueryList<Md2Option>) {\r\n    options.changes.subscribe(_ => {\r\n      this.options = options.toArray();\r\n      let activeTab: Md2Option = this.findActiveTab();\r\n      if (!activeTab && this.options.length) {\r\n        this.options[0].selected = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  open(event: Event, option: Md2Option) {\r\n    if (option.disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (!option.selected) {\r\n      let activeTab: Md2Option = this.findActiveTab();\r\n      if (activeTab) {\r\n        activeTab.selected = false\r\n      }\r\n      option.selected = true;\r\n      this.selectedValue = option.value;\r\n      this.change.emit({ originalEvent: event, index: this.findTabIndex(option) });\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  findActiveTab() {\r\n    for (let i = 0; i < this.options.length; i++) {\r\n      if (this.options[i].selected) {\r\n        return this.options[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  findTabIndex(option: Md2Option) {\r\n    let index = -1;\r\n    for (let i = 0; i < this.options.length; i++) {\r\n      if (this.options[i] == option) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    return index;\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    this.value = value;\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void) {\r\n    //this._controlValueAccessorChangeFn = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n    //this.onTouched = fn;\r\n  }\r\n}\r\n\r\nexport const SELECT_DIRECTIVES = [Md2Select, Md2Option];"],"sourceRoot":"/source/"}