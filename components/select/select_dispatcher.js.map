{"version":3,"sources":["components/select/select_dispatcher.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAAyB,eAAe,CAAC,CAAA;AAKzC;IAAA;QACU,eAAU,GAAkC,EAAE,CAAC;IAWzD,CAAC;IATC,MAAM,CAAC,EAAU,EAAE,IAAY;QAC7B,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACrC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACrB,CAAC;IACH,CAAC;IAED,MAAM,CAAC,QAAqC;QAC1C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;AACH,CAAC;AAbD;IAAC,iBAAU,EAAE;;uBAAA;AACA,2BAAmB,sBAY/B,CAAA","file":"components/select/select_dispatcher.js","sourcesContent":["import {Injectable} from '@angular/core';\r\n\r\nexport type Md2SelectDispatcherListener = (id: string, name: string) => void;\r\n\r\n@Injectable()\r\nexport class Md2SelectDispatcher {\r\n  private _listeners: Md2SelectDispatcherListener[] = [];\r\n\r\n  notify(id: string, name: string) {\r\n    for (let listener of this._listeners) {\r\n      listener(id, name);\r\n    }\r\n  }\r\n\r\n  listen(listener: Md2SelectDispatcherListener) {\r\n    this._listeners.push(listener);\r\n  }\r\n}"],"sourceRoot":"/source/"}