{"version":3,"sources":["components/collapse/collapse.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAAyB,eAAe,CAAC,CAAA;AAczC;IAAA;QAEU,eAAU,GAAY,IAAI,CAAC;QAC3B,iBAAY,GAAY,KAAK,CAAC;IAkCxC,CAAC;IAhCC,IAAY,QAAQ;QAClB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,IAAY,QAAQ,CAAC,KAAc;QACjC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,MAAM;QACJ,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC;IACH,CAAC;IAED,IAAI;QACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,UAAU,CAAC;YACT,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAED,IAAI;QACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,UAAU,CAAC;YACT,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;AACH,CAAC;AAjDD;IAAC,gBAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,UAAU,EAAE,CAAC,UAAU,CAAC;QACxB,IAAI,EAAE;YACJ,YAAY,EAAE,YAAY;YAC1B,kBAAkB,EAAE,MAAM;YAC1B,oBAAoB,EAAE,cAAc;YACpC,sBAAsB,EAAE,YAAY;YACpC,oBAAoB,EAAE,aAAa;SACpC;KACF,CAAC;;eAAA;AAEW,mBAAW,cAqCvB,CAAA;AAED,wEAAwE;AACxE,0EAA0E;AAC1E,iFAAiF;AAEjF,cAAc;AACd,2BAA2B;AAC3B,WAAW;AACX,0CAA0C;AAC1C,sCAAsC;AACtC,KAAK;AACL,IAAI;AACJ,iDAAiD;AAEjD,oCAAoC;AAEpC,+BAA+B;AAE/B,4CAA4C;AAE5C,mFAAmF;AACnF,+CAA+C;AAC/C,KAAK;AAEL,0BAA0B;AAC1B,6BAA6B;AAC7B,4BAA4B;AAC5B,qBAAqB;AACrB,gBAAgB;AAChB,sBAAsB;AACtB,SAAS;AACT,OAAO;AACP,KAAK;AAEL,kBAAkB;AAClB,wBAAwB;AACxB,wBAAwB;AACxB,kEAAkE;AAClE,4BAA4B;AAC5B,UAAU;AACV,sBAAsB;AACtB,sBAAsB;AACtB,0BAA0B;AAC1B,4BAA4B;AAC5B,WAAW;AAEX,iEAAiE;AACjE,0BAA0B;AAC1B,8DAA8D;AAC9D,mCAAmC;AACnC,SAAS;AACT,KAAK;AAEL,kBAAkB;AAClB,qBAAqB;AACrB,uBAAuB;AACvB,uBAAuB;AACvB,wBAAwB;AACxB,4BAA4B;AAC5B,UAAU;AACV,sBAAsB;AACtB,yBAAyB;AACzB,2BAA2B;AAC3B,UAAU;AACV,2CAA2C;AAC3C,2BAA2B;AAC3B,oCAAoC;AACpC,4BAA4B;AAC5B,yBAAyB;AACzB,cAAc;AACd,0BAA0B;AAC1B,qEAAqE;AACrE,cAAc;AACd,gDAAgD;AAEhD,+DAA+D;AAC/D,WAAW;AACX,KAAK;AAEL,0CAA0C;AAC1C,2CAA2C;AAC3C,mCAAmC;AACnC,uCAAuC;AAEvC,yEAAyE;AACzE,oBAAoB;AACpB,KAAK;AAEL,sDAAsD;AACtD,4BAA4B;AAC5B,mCAAmC;AACnC,gCAAgC;AAChC,0BAA0B;AAC1B,wCAAwC;AACxC,KAAK;AACL,GAAG","file":"components/collapse/collapse.js","sourcesContent":["import { Directive} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[collapse]',\r\n  properties: ['collapse'],\r\n  host: {\r\n    '[class.in]': 'isExpanded',\r\n    '[class.collapse]': 'true',\r\n    '[class.collapsing]': 'isCollapsing',\r\n    '[attr.aria-expanded]': 'isExpanded',\r\n    '[attr.aria-hidden]': '!isExpanded',\r\n  }\r\n})\r\n\r\nexport class Md2Collapse {\r\n  private height: string;\r\n  private isExpanded: boolean = true;\r\n  private isCollapsing: boolean = false;\r\n\r\n  private get collapse(): boolean {\r\n    return this.isExpanded;\r\n  }\r\n\r\n  private set collapse(value: boolean) {\r\n    this.isExpanded = value;\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    if (this.isExpanded) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.isCollapsing = true;\r\n    this.isExpanded = false;\r\n    setTimeout(() => {\r\n      this.isCollapsing = false;\r\n    }, 4);\r\n  }\r\n\r\n  show() {\r\n    this.isCollapsing = true;\r\n    this.isExpanded = true;\r\n    setTimeout(() => {\r\n      this.isCollapsing = false;\r\n    }, 4);\r\n  }\r\n}\r\n\r\n//import {Directive, OnChanges, ElementRef, Input} from '@angular/core';\r\n//import {AnimationBuilder} from '@angular/src/animate/animation_builder';\r\n//import {CssAnimationBuilder} from '@angular/src/animate/css_animation_builder';\r\n\r\n//@Directive({\r\n//  selector: '[collapse]',\r\n//  host: {\r\n//    '[attr.aria-expanded]': '!collapse',\r\n//    '[attr.aria-hidden]': 'collapse'\r\n//  }\r\n//})\r\n//export class Md2Collapse implements OnChanges {\r\n\r\n//  @Input() duration: number = 500;\r\n\r\n//  @Input() collapse: boolean;\r\n\r\n//  private _animation: CssAnimationBuilder;\r\n\r\n//  constructor(animationBuilder: AnimationBuilder, private _element: ElementRef) {\r\n//    this._animation = animationBuilder.css();\r\n//  }\r\n\r\n//  ngOnChanges(changes) {\r\n//    if (changes.collapse) {\r\n//      if (this.collapse) {\r\n//        this.hide()\r\n//      } else {\r\n//        this.show();\r\n//      }\r\n//    }\r\n//  }\r\n\r\n//  hide(): void {\r\n//    this._baseSequence\r\n//      .setFromStyles({\r\n//        height: this._element.nativeElement.scrollHeight + 'px',\r\n//        overflow: 'hidden'\r\n//      })\r\n//      .setToStyles({\r\n//        height: '0',\r\n//        paddingTop: '0',\r\n//        paddingBottom: '0'\r\n//      });\r\n\r\n//    let a = this._animation.start(this._element.nativeElement);\r\n//    a.onComplete(() => {\r\n//      a.removeClasses(['in']); // rapid change will leave in\r\n//      a.addClasses(['collapse']);\r\n//    });\r\n//  }\r\n\r\n//  show(): void {\r\n//    this._animation\r\n//      .setDuration(0)\r\n//      .addClass('in')\r\n//      .setFromStyles({\r\n//        overflow: 'hidden'\r\n//      })\r\n//      .setToStyles({\r\n//        paddingTop: '',\r\n//        paddingBottom: ''\r\n//      })\r\n//      .start(this._element.nativeElement)\r\n//      .onComplete(() => {\r\n//        let a = this._baseSequence\r\n//          .setFromStyles({\r\n//            height: '0'\r\n//          })\r\n//          .setToStyles({\r\n//            height: this._element.nativeElement.scrollHeight + 'px'\r\n//          })\r\n//          .start(this._element.nativeElement);\r\n\r\n//        a.onComplete(() => a.addClasses(['collapse', 'in']));\r\n//      });\r\n//  }\r\n\r\n//  private get _elementHeight(): number {\r\n//    let el = this._element.nativeElement;\r\n//    var height = el.offsetHeight;\r\n//    var style = getComputedStyle(el);\r\n\r\n//    height += parseInt(style.marginTop) + parseInt(style.marginBottom);\r\n//    return height;\r\n//  }\r\n\r\n//  private get _baseSequence(): CssAnimationBuilder {\r\n//    return this._animation\r\n//      .setDuration(this.duration)\r\n//      .removeClass('collapse')\r\n//      .removeClass('in')\r\n//      .addAnimationClass('collapsing')\r\n//  }\r\n//}"],"sourceRoot":"/source/"}