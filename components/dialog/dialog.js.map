{"version":3,"sources":["components/dialog/dialog.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAAoF,eAAe,CAAC,CAAA;AA2CpG;IAOE,YAAY,EAAc;QAL1B,YAAO,GAAY,KAAK,CAAC;QACE,mBAAc,GAAY,IAAI,CAAC;QACnC,gBAAW,GAAY,IAAI,CAAC;QAC3B,iBAAY,GAAW,EAAE,CAAC;QAGhD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED,YAAY,CAAC,CAAM;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,KAAK,iBAAiB,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,IAAI,EAAE,CAAC;YACd,CAAC;QACH,CAAC;IACH,CAAC;IAED,UAAU;QACR,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED,IAAI;QACF,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,IAAI;QACF,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,SAAkB;QACvB,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QACzB,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAC/B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QAC3B,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,KAAK,GAAG,QAAQ,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC;YACtE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YAC3C,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC,CAAQ;oBAC3D,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,KAAK,iBAAiB,CAAC,CAAC,CAAC;wBACjD,IAAI,CAAC,IAAI,EAAE,CAAC;oBACd,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;AACH,CAAC;AArDC;IAAC,YAAK,CAAC,kBAAkB,CAAC;;iDAAA;AAC1B;IAAC,YAAK,CAAC,cAAc,CAAC;;8CAAA;AACtB;IAAC,YAAK,CAAC,eAAe,CAAC;;+CAAA;AA9CzB;IAAC,gBAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,QAAQ,EAAE;;;;;;;;;;;GAWT;QACD,MAAM,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;GAoBR,CAAC;QACF,IAAI,EAAE;YACJ,SAAS,EAAE,sBAAsB;SAClC;QACD,aAAa,EAAE,wBAAiB,CAAC,IAAI;KACtC,CAAC;;aAAA;AAEW,iBAAS,YAwDrB,CAAA","file":"components/dialog/dialog.js","sourcesContent":["import {Component, ElementRef, Input, Output, ViewEncapsulation, EventEmitter} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'md2-dialog',\r\n  template: `\r\n    <div class=\"md2-dialog\" [class.open]=\"visible\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myDialogLabel\" aria-hidden=\"true\" [style.display]=\"visible ? 'block' : 'none'\">\r\n      <div class=\"md2-dialog-container\" role=\"document\">\r\n        <div class=\"md2-dialog-header\">\r\n          <button *ngIf=\"closeButton\" type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"hide()\">&times;</button>\r\n          <h2 *ngIf=\"dialogHeader\" class=\"md2-dialog-title\" id=\"myDialogLabel\" [innerHtml]=\"dialogHeader\"></h2>\r\n          <ng-content select=\"dialog-header\"></ng-content>\r\n        </div>\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .md2-dialog-open { overflow-y: hidden; }\r\n    .md2-dialog { position: fixed; top: 0; right: 0; bottom: 0; left: 0; z-index: 1050; background-color: rgba(33, 33, 33, 0.48); display: none; overflow-x: hidden; overflow-y: scroll; -webkit-overflow-scrolling: touch; outline: 0; }\r\n    .md2-dialog.open { display: block; }\r\n    .md2-dialog .md2-dialog-container { position: relative; width: auto; margin: 15px; background-color: #fff; -webkit-background-clip: padding-box; -moz-background-clip: padding-box; background-clip: padding-box; border-radius: 4px; outline: 0; -webkit-box-shadow: 0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12); box-shadow: 0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12); -webkit-transition: .3s; -o-transition: .3s; -moz-transition: .3s; transition: .3s; -webkit-transform: scale(0.1); -ms-transform: scale(0.1); -o-transform: scale(0.1); -moz-transform: scale(0.1); transform: scale(0.1); }\r\n    .md2-dialog.open .md2-dialog-container { -webkit-transform: scale(1); -ms-transform: scale(1); -o-transform: scale(1); -moz-transform: scale(1); transform: scale(1); }\r\n    @media (min-width: 768px) {\r\n      .md2-dialog .md2-dialog-container { width: 600px; margin: 30px auto; }\r\n    }\r\n    .md2-dialog-header { background: #2196f3; color: #fff; font-size: 25px; line-height: 1.1; font-weight: 500; padding: 16px; border-bottom: 1px solid #e5e5e5; }\r\n    .md2-dialog-header .close { position: relative;display: inline-block;width: 18px;height: 18px;margin-top: 4px;overflow: hidden;-webkit-appearance: none; padding: 0; cursor: pointer; background: 0 0; border: 0; float: right; opacity: 0.8; font-size: 0; }\r\n    .md2-dialog-header .close::before,\r\n    .md2-dialog-header .close::after {content: '';position: absolute;height: 2px;width: 100%;top: 50%;left: 0;margin-top: -1px;background: #fff;border-radius: 2px;height: 2px;}\r\n    .md2-dialog-header .close::before {-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);-ms-transform: rotate(45deg);-o-transform: rotate(45deg);transform: rotate(45deg);}\r\n    .md2-dialog-header .close::after {-webkit-transform: rotate(-45deg);-moz-transform: rotate(-45deg);-ms-transform: rotate(-45deg);-o-transform: rotate(-45deg);transform: rotate(-45deg);}\r\n    .md2-dialog-header .close:hover { opacity: 1; }\r\n    .md2-dialog-header .md2-dialog-title { margin: 0; font-size: 25px; line-height: 1.1; font-weight: 500; }\r\n    .md2-dialog-header dialog-header { line-height: 33px; }\r\n    .md2-dialog-body { position: relative; padding: 16px; }\r\n    .md2-dialog-footer { padding: 16px; text-align: right; border-top: 1px solid rgba(0,0,0,0.12); }\r\n  `],\r\n  host: {\r\n    '(click)': 'clickElement($event)'\r\n  },\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class Md2Dialog {\r\n  private _el: HTMLElement;\r\n  visible: boolean = false;\r\n  @Input('close-on-unfocus') closeOnUnfocus: boolean = true;\r\n  @Input('close-button') closeButton: boolean = true;\r\n  @Input('dialog-header') dialogHeader: string = '';\r\n\r\n  constructor(el: ElementRef) {\r\n    this._el = el.nativeElement;\r\n  }\r\n\r\n  clickElement(e: any) {\r\n    if (this.closeOnUnfocus) {\r\n      if (e.srcElement.className === 'md2-dialog open') {\r\n        this.hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  getElement(): HTMLElement {\r\n    return this._el;\r\n  }\r\n\r\n  show(): boolean {\r\n    return this.toggle(true);\r\n  }\r\n\r\n  hide(): boolean {\r\n    return this.toggle(false);\r\n  }\r\n\r\n  toggle(isVisible: boolean): boolean {\r\n    var body = document.body;\r\n    if (isVisible === undefined) {\r\n      this.visible = !this.visible;\r\n    } else {\r\n      this.visible = isVisible;\r\n    }\r\n\r\n    if (this.visible) {\r\n      body.classList.add('md2-dialog-open');\r\n    } else {\r\n      let count = document.getElementsByClassName('md2-dialog open').length;\r\n      if (count < 2) {\r\n        body.classList.remove('md2-dialog-open');\r\n      }\r\n      if (this.closeOnUnfocus) {\r\n        this._el.childNodes[0].removeEventListener('click', (e: Event) => {\r\n          if (e.srcElement.className === 'md2-dialog open') {\r\n            this.hide();\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}"],"sourceRoot":"/source/"}