{"version":3,"sources":["components/tooltip/tooltip.component.ts"],"names":[],"mappings":"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","file":"components/tooltip/tooltip.component.js","sourcesContent":["import { AfterViewInit, Component, ChangeDetectorRef, ElementRef, HostBinding, ViewEncapsulation } from '@angular/core';\r\nimport { NgClass, NgStyle } from '@angular/common';\r\nimport { Md2TooltipOptions } from './tooltip.options';\r\n\r\n@Component({\r\n  selector: 'md2-tooltip',\r\n  directives: [NgClass, NgStyle],\r\n  template: `\r\n    <div class=\"md2-tooltip\" [class.md2-show]=\"show\" [ngClass]=\"direction\" [ngStyle]=\"{top: top, left: left}\">\r\n      <div class=\"md2-tooltip-inner\">{{content}}</div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .md2-tooltip { position: fixed; z-index: 1070; overflow: hidden; pointer-events: none; border-radius: 4px; font-weight: 500; font-style: normal; font-size: 10px; display: block; color: rgb(255,255,255); -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -moz-backface-visibility: hidden; -webkit-backface-visibility: hidden; backface-visibility: hidden; }\r\n    .md2-tooltip .md2-tooltip-inner { position: relative; color: #fff; text-align: center; opacity: 0; min-height: 22px; max-width: 200px; background-color: rgba(0,0,0,0.8); border-radius: 4px; line-height: 1.5; padding: 4px 12px; -moz-transition: all .2s cubic-bezier(.25,.8,.25,1); -o-transition: all .2s cubic-bezier(.25,.8,.25,1); -webkit-transition: all .2s cubic-bezier(.25,.8,.25,1); transition: all .2s cubic-bezier(.25,.8,.25,1); -moz-transform-origin: center top; -ms-transform-origin: center top; -o-transform-origin: center top; -webkit-transform-origin: center top; transform-origin: center top; -moz-transform: scale(0); -ms-transform: scale(0); -o-transform: scale(0); -webkit-transform: scale(0); transform: scale(0); }\r\n    .md2-tooltip.top .md2-tooltip-inner { -moz-transform-origin: center bottom; -ms-transform-origin: center bottom; -o-transform-origin: center bottom; -webkit-transform-origin: center bottom; transform-origin: center bottom; }\r\n    .md2-tooltip.right .md2-tooltip-inner { -moz-transform-origin: center left; -ms-transform-origin: center left; -o-transform-origin: center left; -webkit-transform-origin: center left; transform-origin: center left; }\r\n    .md2-tooltip.left .md2-tooltip-inner { -moz-transform-origin: center right; -ms-transform-origin: center right; -o-transform-origin: center right; -webkit-transform-origin: center right; transform-origin: center right; }\r\n    .md2-show .md2-tooltip-inner { opacity: 1; -moz-transform: scale(1); -ms-transform: scale(1); -o-transform: scale(1); -webkit-transform: scale(1); transform: scale(1); }\r\n  `],\r\n  host: {\r\n    'role': 'tooltip'\r\n  },\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class Md2TooltipComponent implements AfterViewInit {\r\n  private show: boolean;\r\n  private top: string = '-1000px';\r\n  private left: string = '-1000px';\r\n  private content: string;\r\n  private direction: string;\r\n  private hostEl: ElementRef;\r\n  private element: ElementRef;\r\n  private cdr: ChangeDetectorRef;\r\n\r\n  constructor(element: ElementRef, cdr: ChangeDetectorRef, options: Md2TooltipOptions) {\r\n    this.element = element;\r\n    this.cdr = cdr;\r\n    Object.assign(this, options);\r\n    this.show = false;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let p = this.positionElements(\r\n      this.hostEl.nativeElement,\r\n      this.element.nativeElement.children[0],\r\n      this.direction);\r\n    this.top = p.top + 'px';\r\n    this.left = p.left + 'px';\r\n    this.show = true;\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * calculate position of target element\r\n   * @param hostEl\r\n   * @param targetEl\r\n   * @param direction\r\n   */\r\n  private positionElements(hostEl: HTMLElement, targetEl: HTMLElement, direction: string): { top: number, left: number } {\r\n    let positionStrParts = direction.split('-');\r\n    let pos0 = positionStrParts[0];\r\n    let pos1 = positionStrParts[1] || 'center';\r\n    let hostElPos = this.offset(hostEl);\r\n    let targetElWidth = targetEl.offsetWidth;\r\n    let targetElHeight = targetEl.offsetHeight;\r\n    let shiftWidth: any = {\r\n      center: hostElPos.left + hostElPos.width / 2 - targetElWidth / 2,\r\n      left: hostElPos.left,\r\n      right: hostElPos.left + hostElPos.width\r\n    };\r\n\r\n    let shiftHeight: any = {\r\n      center: hostElPos.top + hostElPos.height / 2 - targetElHeight / 2,\r\n      top: hostElPos.top,\r\n      bottom: hostElPos.top + hostElPos.height\r\n    };\r\n\r\n    let targetElPos: { top: number, left: number };\r\n    switch (pos0) {\r\n      case 'right':\r\n        targetElPos = {\r\n          top: shiftHeight[pos1],\r\n          left: shiftWidth[pos0]\r\n        };\r\n        break;\r\n      case 'left':\r\n        targetElPos = {\r\n          top: shiftHeight[pos1],\r\n          left: (hostElPos.left - targetElWidth)// > 0 ? (hostElPos.left - targetElWidth) : (hostElPos.width + hostElPos.left)\r\n        };\r\n        break;\r\n      case 'top':\r\n        targetElPos = {\r\n          top: hostElPos.top - targetElHeight,\r\n          left: shiftWidth[pos1]\r\n        };\r\n        break;\r\n      default:\r\n        targetElPos = {\r\n          top: shiftHeight[pos0],\r\n          left: shiftWidth[pos1]\r\n        };\r\n        break;\r\n    }\r\n    return targetElPos;\r\n  }\r\n\r\n  /**\r\n   * calculate offset of target element\r\n   * @param nativeEl\r\n   */\r\n  private offset(nativeEl: any): { width: number, height: number, top: number, left: number } {\r\n    let boundingClientRect = nativeEl.getBoundingClientRect();\r\n    return {\r\n      width: boundingClientRect.width || nativeEl.offsetWidth,\r\n      height: boundingClientRect.height || nativeEl.offsetHeight,\r\n      top: boundingClientRect.top + (this.window.pageYOffset || this.document.documentElement.scrollTop) - this.document.body.scrollTop,\r\n      left: boundingClientRect.left + (this.window.pageXOffset || this.document.documentElement.scrollLeft) - this.document.body.scrollLeft\r\n    };\r\n  }\r\n\r\n  private get window(): Window { return window; }\r\n\r\n  private get document(): Document { return window.document; }\r\n}"],"sourceRoot":"/source/"}