{"version":3,"sources":["components/autocomplete/autocomplete.ts"],"names":[],"mappings":"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","file":"components/autocomplete/autocomplete.js","sourcesContent":["import { AfterContentInit, Component, ElementRef, EventEmitter, forwardRef, HostListener, Input, Output, Provider, ViewEncapsulation } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/common';\r\nimport { HightlightPipe } from './autocomplete.pipe';\r\n\r\nclass Item {\r\n  public text: string;\r\n  public value: string;\r\n\r\n  constructor(source: any, textKey: string, valueKey: string) {\r\n    if (typeof source === 'string') {\r\n      this.text = this.value = source;\r\n    }\r\n    if (typeof source === 'object') {\r\n      this.text = source[textKey];\r\n      this.value = valueKey ? source[valueKey] : source;\r\n    }\r\n  }\r\n}\r\n\r\nconst noop = () => { };\r\n\r\nlet nextId = 0;\r\n\r\nconst MD2_AUTOCOMPLETE_CONTROL_VALUE_ACCESSOR = new Provider(NG_VALUE_ACCESSOR, {\r\n  useExisting: forwardRef(() => Md2Autocomplete),\r\n  multi: true\r\n});\r\n\r\n@Component({\r\n  selector: 'md2-autocomplete',\r\n  pipes: [HightlightPipe],\r\n  template: `\r\n    <div class=\"md2-autocomplete-wrap\">\r\n      <input [(ngModel)]=\"inputBuffer\" type=\"text\" tabs=\"false\" autocomplete=\"off\" [tabindex]=\"disabled ? -1 : tabindex\" [disabled]=\"disabled\" class=\"md2-autocomplete-input\" [placeholder]=\"placeholder\" (focus)=\"onInputFocus()\" (blur)=\"onInputBlur()\" (keydown)=\"inputKeydown($event)\" (change)=\"$event.stopPropagation()\" />\r\n      <em *ngIf=\"inputBuffer\" (click)=\"onClear()\" class=\"md2-autocomplete-clear-icon\"></em>\r\n    </div>\r\n    <ul *ngIf=\"isMenuVisible\" class=\"md2-autocomplete-menu\" (mouseenter)=\"listEnter()\" (mouseleave)=\"listLeave()\">\r\n      <li class=\"md2-option\" *ngFor=\"let l of list; let i = index;\" [class.focus]=\"focusedOption === i\" (click)=\"select($event, i)\">\r\n        <div class=\"md2-text\" [innerHtml]=\"l.text | hightlight:inputBuffer\"></div>\r\n      </li>\r\n    </ul>\r\n  `,\r\n  styles: [`\r\n    .md2-autocomplete { position: relative; display: block; outline: none; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -moz-backface-visibility: hidden; -webkit-backface-visibility: hidden; backface-visibility: hidden; }\r\n    .md2-autocomplete .md2-autocomplete-wrap { position: relative; display: block; width: 100%; padding: 2px 0 1px; border-bottom: 1px solid rgba(0, 0, 0, 0.38); -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; min-width: 64px; min-height: 26px; max-height: 90px; cursor: pointer; }\r\n    .md2-autocomplete.disabled .md2-autocomplete-wrap { color: rgba(0,0,0,0.38); }\r\n    .md2-autocomplete-wrap .md2-autocomplete-input { width: 100%; height: 26px; outline: none; background: transparent; border: 0; -moz-box-sizing: content-box; -webkit-box-sizing: content-box; box-sizing: content-box; }\r\n    .md2-autocomplete-wrap .md2-autocomplete-clear-icon { position: absolute; top: 50%; right: 0; display: inline-block; width: 18px; height: 18px; margin: -9px 2px 0; overflow: hidden; }\r\n    .md2-autocomplete-wrap .md2-autocomplete-clear-icon::before,\r\n    .md2-autocomplete-wrap .md2-autocomplete-clear-icon::after { content: ''; position: absolute; height: 2px; width: 100%; top: 50%; left: 0; margin-top: -1px; background: #888; border-radius: 2px; height: 2px; }\r\n    .md2-autocomplete-wrap .md2-autocomplete-clear-icon::before { -webkit-transform: rotate(45deg); -moz-transform: rotate(45deg); -ms-transform: rotate(45deg); -o-transform: rotate(45deg); transform: rotate(45deg); }\r\n    .md2-autocomplete-wrap .md2-autocomplete-clear-icon::after { -webkit-transform: rotate(-45deg); -moz-transform: rotate(-45deg); -ms-transform: rotate(-45deg); -o-transform: rotate(-45deg); transform: rotate(-45deg); }\r\n    .md2-autocomplete-menu { position: absolute; left: 0; top: 100%; display: block; z-index: 10; width: 100%; margin: 0; padding: 8px 0; box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12); max-height: 256px; min-height: 48px; overflow-y: auto; background: #fff; }\r\n    .md2-autocomplete-menu .md2-option { position: relative; display: block; cursor: pointer; width: auto; padding: 0 16px; height: 48px; line-height: 48px; -moz-transition: background 0.15s linear; -o-transition: background 0.15s linear; -webkit-transition: background 0.15s linear; transition: background 0.15s linear; }\r\n    .md2-autocomplete-menu .md2-option:hover,\r\n    .md2-autocomplete-menu .md2-option.focus { background: #eeeeee; }\r\n    .md2-autocomplete-menu .md2-option .md2-text { width: auto; white-space: nowrap; overflow: hidden; -ms-text-overflow: ellipsis; -o-text-overflow: ellipsis; text-overflow: ellipsis; font-size: 16px; }\r\n    .md2-autocomplete-menu .highlight { color: #757575; }\r\n  `],\r\n  host: {\r\n    'role': 'autocomplete',\r\n    '[id]': 'id',\r\n    '[class.md2-autocomplete]': 'true',\r\n    '[class.md2-autocomplete-disabled]': 'disabled',\r\n    '[attr.aria-disabled]': 'disabled'\r\n  },\r\n  providers: [MD2_AUTOCOMPLETE_CONTROL_VALUE_ACCESSOR],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class Md2Autocomplete implements AfterContentInit, ControlValueAccessor {\r\n\r\n  constructor(private element: ElementRef) { }\r\n\r\n  ngAfterContentInit() { this._isInitialized = true; }\r\n\r\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  private _value: any = '';\r\n  private _isInitialized: boolean = false;\r\n  private _onTouchedCallback: () => void = noop;\r\n  private _onChangeCallback: (_: any) => void = noop;\r\n\r\n  private _items: Array<any> = [];\r\n  private list: Array<Item> = [];\r\n\r\n  private focusedOption: number = 0;\r\n  private inputBuffer: string = '';\r\n  private selectedItem: Item = null;\r\n  private inputFocused: boolean = false;\r\n  private noBlur: boolean = true;\r\n\r\n  @Input() id: string = 'md2-autocomplete-' + (++nextId);\r\n  @Input() disabled: boolean = false;\r\n  @Input() tabindex: number = 0;\r\n  @Input() placeholder: string = '';\r\n  @Input('item-text') textKey: string = 'text';\r\n  @Input('item-value') valueKey: string = null;\r\n\r\n  @Input() set items(value: Array<any>) {\r\n    this._items = value;\r\n  }\r\n\r\n  get value(): any {\r\n    return this._value;\r\n  }\r\n  @Input() set value(value: any) {\r\n    this.setValue(value);\r\n  }\r\n\r\n  /**\r\n   * set value\r\n   * @param value\r\n   */\r\n  private setValue(value: any) {\r\n    if (value !== this._value) {\r\n      this._value = value;\r\n      this.inputBuffer = '';\r\n      if (value) {\r\n        let selItm = this._items.find(i => this.equals(this.valueKey ? i[this.valueKey] : i, value));\r\n        this.selectedItem = new Item(selItm, this.textKey, this.valueKey);\r\n        if (this.selectedItem) { this.inputBuffer = this.selectedItem.text; }\r\n      }\r\n      if (!this.inputBuffer) { this.inputBuffer = ''; }\r\n      if (this._isInitialized) {\r\n        this._onChangeCallback(value);\r\n        this.change.emit(this._value);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compare two vars or objects\r\n   * @param o1\r\n   * @param o2\r\n   */\r\n  private equals(o1, o2) {\r\n    if (o1 === o2) return true;\r\n    if (o1 === null || o2 === null) return false;\r\n    if (o1 !== o1 && o2 !== o2) return true;\r\n    let t1 = typeof o1, t2 = typeof o2, length, key, keySet;\r\n    if (t1 === t2 && t1 === 'object') {\r\n      keySet = Object.create(null);\r\n      for (key in o1) {\r\n        if (!this.equals(o1[key], o2[key])) return false;\r\n        keySet[key] = true;\r\n      }\r\n      for (key in o2) {\r\n        if (!(key in keySet) && key.charAt(0) !== '$' && o2[key]) return false;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  get isMenuVisible(): boolean {\r\n    return ((this.inputFocused || this.noBlur) && this.list && this.list.length && !this.selectedItem) ? true : false;\r\n  }\r\n\r\n  /**\r\n   * update scroll of suggestion menu\r\n   */\r\n  private updateScroll() {\r\n    if (this.focusedOption < 0) return;\r\n    let menuContainer = this.element.nativeElement.querySelector('.md2-autocomplete-menu');\r\n    if (!menuContainer) return;\r\n\r\n    let choices = menuContainer.querySelectorAll('.md2-option');\r\n    if (choices.length < 1) return;\r\n\r\n    let highlighted: any = choices[this.focusedOption];\r\n    if (!highlighted) return;\r\n\r\n    let top: number = highlighted.offsetTop + highlighted.clientHeight - menuContainer.scrollTop;\r\n    let height: number = menuContainer.offsetHeight;\r\n\r\n    if (top > height) {\r\n      menuContainer.scrollTop += top - height;\r\n    } else if (top < highlighted.clientHeight) {\r\n      menuContainer.scrollTop -= highlighted.clientHeight - top;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * input event listner\r\n   * @param event\r\n   */\r\n  private inputKeydown(event: KeyboardEvent) {\r\n    if (this.disabled) { return; }\r\n    // Down Arrow\r\n    if (event.keyCode === 40) {\r\n      if (!this.isMenuVisible) return;\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n      this.focusedOption = (this.focusedOption === this.list.length - 1) ? 0 : Math.min(this.focusedOption + 1, this.list.length - 1);\r\n      this.updateScroll();\r\n      return;\r\n    }\r\n    // Up Arrow\r\n    if (event.keyCode === 38) {\r\n      if (!this.isMenuVisible) return;\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n      this.focusedOption = (this.focusedOption === 0) ? this.list.length - 1 : Math.max(0, this.focusedOption - 1);\r\n      this.updateScroll();\r\n      return;\r\n    }\r\n    // Tab Key\r\n    if (event.keyCode === 9) {\r\n      this.listLeave();\r\n      return;\r\n    }\r\n    // Escape Key\r\n    if (event.keyCode === 27) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n      this.onClear();\r\n      return;\r\n    }\r\n    // Enter\r\n    if (event.keyCode === 13) {\r\n      if (this.isMenuVisible) {\r\n        this.select(event, this.focusedOption);\r\n      }\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    //filter\r\n    setTimeout(() => {\r\n      this.updateItems(new RegExp(this.inputBuffer, 'ig'));\r\n    }, 10);\r\n  }\r\n\r\n  /**\r\n   * select option\r\n   * @param event\r\n   * @param index\r\n   */\r\n  private select(event, index) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.selectedItem = this.list[index];\r\n    this.inputBuffer = this.list[index].text;\r\n    this.updateValue();\r\n  }\r\n\r\n  /**\r\n   * clear selected suggestion\r\n   */\r\n  private onClear() {\r\n    if (this.disabled) { return; }\r\n    this.inputBuffer = '';\r\n    this.selectedItem = null;\r\n    this.updateItems(new RegExp(this.inputBuffer, 'ig'));\r\n    this._value = this.selectedItem ? this.selectedItem.value : this.selectedItem;\r\n    this.updateValue();\r\n  }\r\n\r\n  /**\r\n   * update value\r\n   */\r\n  private updateValue() {\r\n    this._value = this.selectedItem ? this.selectedItem.value : this.selectedItem;\r\n    this._onChangeCallback(this._value);\r\n    this.change.emit(this._value);\r\n    this.onFocus();\r\n  }\r\n\r\n  /**\r\n   * component focus listener\r\n   */\r\n  private onFocus() {\r\n    if (this.disabled) return;\r\n    this.element.nativeElement.querySelector('input').focus();\r\n  }\r\n\r\n  /**\r\n   * input focus listener\r\n   */\r\n  private onInputFocus() {\r\n    this.inputFocused = true;\r\n    this.updateItems(new RegExp(this.inputBuffer, 'ig'));\r\n    this.focusedOption = 0;\r\n  }\r\n\r\n  /**\r\n   * input blur listener\r\n   */\r\n  private onInputBlur() {\r\n    this.inputFocused = false;\r\n  }\r\n\r\n  /**\r\n   * suggestion menu mouse enter listener\r\n   */\r\n  private listEnter() { this.noBlur = true; }\r\n\r\n  /**\r\n   * suggestion menu mouse leave listener\r\n   */\r\n  private listLeave() { this.noBlur = false; }\r\n\r\n  /**\r\n   * Update suggestion to filter the query\r\n   * @param query\r\n   */\r\n  private updateItems(query: RegExp) {\r\n    this.list = this._items.map((i: any) => new Item(i, this.textKey, this.valueKey)).filter(i => query.test(i.text));\r\n    if (this.list.length && this.list[0].text !== this.inputBuffer) {\r\n      this.selectedItem = null;\r\n    }\r\n  }\r\n\r\n  writeValue(value: any) { this.setValue(value); }\r\n\r\n  registerOnChange(fn: any) { this._onChangeCallback = fn; }\r\n\r\n  registerOnTouched(fn: any) { this._onTouchedCallback = fn; }\r\n}"],"sourceRoot":"/source/"}