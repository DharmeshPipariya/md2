{"version":3,"sources":["components/autocomplete/autocomplete.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAAkC,eAAe,CAAC,CAAA;AAKlD;IACE,SAAS,CAAC,KAAa,EAAE,IAAW;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAAC,CAAC;QACtC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,CAAC,KAAK;YACV,KAAK,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,mCAAmC,CAAC;YAC9F,KAAK,CAAC;IACV,CAAC;IACO,YAAY,CAAC,aAAqB;QACxC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;IACjE,CAAC;AACH,CAAC;AAdD;IAAC,WAAI,CAAC;QACJ,IAAI,EAAE,YAAY;KACnB,CAAC;;kBAAA;AACW,sBAAc,iBAW1B,CAAA","file":"components/autocomplete/autocomplete.pipe.js","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'hightlight'\r\n})\r\nexport class HightlightPipe implements PipeTransform {\r\n  transform(value: string, args: any[]) {\r\n    if (args.length < 1) { return value; }\r\n    let query = args[0];\r\n    return query ?\r\n      value.replace(new RegExp(this.escapeRegexp(query), 'gi'), '<span class=\"highlight\">$&</span>') :\r\n      value;\r\n  }\r\n  private escapeRegexp(queryToEscape: string) {\r\n    return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\r\n  }\r\n}"],"sourceRoot":"/source/"}