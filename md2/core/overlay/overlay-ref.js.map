{"version":3,"sources":["core/overlay/overlay-ref.ts"],"names":[],"mappings":"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","file":"core/overlay/overlay-ref.js","sourcesContent":["import {PortalHost, Portal} from '../portal/portal';\r\nimport {OverlayState} from './overlay-state';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n\r\n/**\r\n * Reference to an overlay that has been created with the Overlay service.\r\n * Used to manipulate or dispose of said overlay.\r\n */\r\nexport class OverlayRef implements PortalHost {\r\n  private _backdropElement: HTMLElement = null;\r\n  private _backdropClick: Subject<any> = new Subject();\r\n\r\n  constructor(\r\n      private _portalHost: PortalHost,\r\n      private _pane: HTMLElement,\r\n      private _state: OverlayState) { }\r\n\r\n  attach(portal: Portal<any>): any {\r\n    if (this._state.hasBackdrop) {\r\n      this._attachBackdrop();\r\n    }\r\n\r\n    let attachResult = this._portalHost.attach(portal);\r\n    this.updatePosition();\r\n\r\n    return attachResult;\r\n  }\r\n\r\n  detach(): Promise<any> {\r\n    this._detatchBackdrop();\r\n    return this._portalHost.detach();\r\n  }\r\n\r\n  dispose(): void {\r\n    this._detatchBackdrop();\r\n    this._portalHost.dispose();\r\n  }\r\n\r\n  hasAttached(): boolean {\r\n    return this._portalHost.hasAttached();\r\n  }\r\n\r\n  backdropClick(): Observable<void> {\r\n    return this._backdropClick.asObservable();\r\n  }\r\n\r\n  /** Gets the current state config of the overlay. */\r\n  getState() {\r\n    return this._state;\r\n  }\r\n\r\n  /** Updates the position of the overlay based on the position strategy. */\r\n  updatePosition() {\r\n    if (this._state.positionStrategy) {\r\n      this._state.positionStrategy.apply(this._pane);\r\n    }\r\n  }\r\n\r\n  /** Attaches a backdrop for this overlay. */\r\n  private _attachBackdrop() {\r\n    this._backdropElement = document.createElement('div');\r\n    this._backdropElement.classList.add('md-overlay-backdrop');\r\n    this._pane.parentElement.appendChild(this._backdropElement);\r\n\r\n    // Forward backdrop clicks such that the consumer of the overlay can perform whatever\r\n    // action desired when such a click occurs (usually closing the overlay).\r\n    this._backdropElement.addEventListener('click', () => {\r\n      this._backdropClick.next(null);\r\n    });\r\n\r\n    // Add class to fade-in the backdrop after one frame.\r\n    requestAnimationFrame(() => {\r\n      this._backdropElement.classList.add('md-overlay-backdrop-showing');\r\n    });\r\n  }\r\n\r\n  /** Detaches the backdrop (if any) associated with the overlay. */\r\n  private _detatchBackdrop(): void {\r\n    let backdropToDetach = this._backdropElement;\r\n\r\n    if (backdropToDetach) {\r\n      backdropToDetach.classList.remove('md-overlay-backdrop-showing');\r\n      backdropToDetach.addEventListener('transitionend', () => {\r\n        backdropToDetach.parentNode.removeChild(backdropToDetach);\r\n\r\n        // It is possible that a new portal has been attached to this overlay since we started\r\n        // removing the backdrop. If that is the case, only clear the backdrop reference if it\r\n        // is still the same instance that we started to remove.\r\n        if (this._backdropElement == backdropToDetach) {\r\n          this._backdropElement = null;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}