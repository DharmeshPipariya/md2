{"version":3,"sources":["core/compatibility/style-compatibility.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAC,QAAQ,EAAuB,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAC,MAAM,eAAe;AAG5F,wFAAwF;AACxF,OAAO,IAAM,iBAAiB,GAAG,0PAgBhC,CAAC;AAEF;;;;;;;;GAQG;AAIH;IACE,4BAAY,QAAkB,EAAE,UAAsB;QACpD,IAAM,OAAO,GAAG,UAAU,CAAC,aAAqB,CAAC;QACjD,QAAQ,CAAC,eAAe,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC/C,QAAQ,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;IAC1E,CAAC;IARH;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;SAC5B,CAAC;;0BAAA;IAOF,yBAAC;AAAD,CANA,AAMC,IAAA;AAOD;IAAA;IAOA,CAAC;IANQ,gCAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,wBAAwB;YAClC,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IAVH;QAAC,QAAQ,CAAC;YACR,YAAY,EAAE,CAAC,kBAAkB,CAAC;YAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;SAC9B,CAAC;;gCAAA;IAQF,+BAAC;AAAD,CAPA,AAOC,IAAA","file":"style-compatibility.js","sourcesContent":["import {NgModule, ModuleWithProviders, Directive, Renderer, ElementRef} from '@angular/core';\r\n\r\n\r\n/** Selector that matches all elements that may have style collisions with material1. */\r\nexport const ELEMENTS_SELECTOR = `\r\n  md2-accordion,\r\n  md2-autocomplete,\r\n  md2-chips,\r\n  md2-collapse,\r\n  md2-colorpicker,\r\n  md2-data-table,\r\n  md2-datepicker,\r\n  md2-dialog,\r\n  md2-menu,\r\n  md2-multiselect,\r\n  md2-select,\r\n  md2-tabs,\r\n  md2-tags,\r\n  md2-toast,\r\n  md2-tooltip\r\n`;\r\n\r\n/**\r\n * Directive to apply to all material2 components that use the same element name as a\r\n * component in material2. It does two things:\r\n * 1) Adds the css class \"md2\" to the host element so that material1 can use this class with a\r\n *    :not() in order to avoid affecting material2 elements.\r\n * 2) Adds a css class to the element that is identical to the element's tag. E.g., the element\r\n *    `<md-card>` would be given a css class `md-card`. This is done so that material2 can style\r\n *    only these classes instead of defining element rules that would affect material1 components.\r\n */\r\n@Directive({\r\n  selector: ELEMENTS_SELECTOR,\r\n})\r\nexport class StyleCompatibility {\r\n  constructor(renderer: Renderer, elementRef: ElementRef) {\r\n    const element = elementRef.nativeElement as Node;\r\n    renderer.setElementClass(element, 'md2', true);\r\n    renderer.setElementClass(element, element.nodeName.toLowerCase(), true);\r\n  }\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [StyleCompatibility],\r\n  exports: [StyleCompatibility],\r\n})\r\nexport class StyleCompatibilityModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: StyleCompatibilityModule,\r\n      providers: [],\r\n    };\r\n  }\r\n}\r\n"]}