{"version":3,"sources":["autocomplete/autocomplete.pipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;IAAA,qBAGO,eAAe,CAAC,CAAA;IAGvB;QAAA;QAoBA,CAAC;QAnBC;;;;;WAKG;QACH,kCAAS,GAAT,UAAU,KAAa,EAAE,KAAa;YACpC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YAAC,CAAC;YACvC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,mCAAmC,CAAC,GAAG,KAAK,CAAC;QACxH,CAAC;QAED;;;;WAIG;QACK,qCAAY,GAApB,UAAqB,aAAqB;YACxC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;QACjE,CAAC;QApBH;YAAC,WAAI,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;;0BAAA;QAqB7B,qBAAC;IAAD,CApBA,AAoBC,IAAA;IApBY,sBAAc,iBAoB1B,CAAA","file":"autocomplete/autocomplete.pipe.js","sourcesContent":["import {\r\n  Pipe,\r\n  PipeTransform\r\n} from '@angular/core';\r\n\r\n@Pipe({ name: 'hightlight' })\r\nexport class HightlightPipe implements PipeTransform {\r\n  /**\r\n   * Transform function\r\n   * @param value string\r\n   * @param query string filter value\r\n   * @return filtered string with markup\r\n   */\r\n  transform(value: string, query: string) {\r\n    if (query.length < 1) { return value; }\r\n    return query ? value.replace(new RegExp(this.escapeRegexp(query), 'gi'), '<span class=\"highlight\">$&</span>') : value;\r\n  }\r\n\r\n  /**\r\n   * filter pipe\r\n   * @param queryToEscape\r\n   * @return queryToEscape with replace string\r\n   */\r\n  private escapeRegexp(queryToEscape: string) {\r\n    return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}