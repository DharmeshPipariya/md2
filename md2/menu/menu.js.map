{"version":3,"sources":["menu/menu.ts"],"names":[],"mappings":"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","file":"menu.js","sourcesContent":["import {\n  ContentChild,\n  Directive,\n  ElementRef,\n  Host,\n  HostListener,\n  OnDestroy,\n  NgModule,\n  ModuleWithProviders\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Directive({ selector: '[md2-menu-not-closable]' })\nexport class Md2MenuNotClosable {\n\n  constructor(private elementRef: ElementRef) { }\n\n  /**\n   * contains\n   * @param element\n   */\n  public contains(element: HTMLElement) {\n    let thisElement: HTMLElement = this.elementRef.nativeElement;\n    return thisElement.contains(element);\n  }\n}\n\n@Directive({\n  selector: '[md2-menu]',\n  host: {\n    'role': 'menu',\n    '[class.md2-menu]': 'true',\n    '[class.open]': 'isVisible'\n  }\n})\nexport class Md2Menu {\n\n  private isVisible: boolean = false;\n\n  @ContentChild(Md2MenuNotClosable) notClosable: Md2MenuNotClosable;\n\n  constructor(private elementRef: ElementRef) { }\n\n  /**\n   * open menu\n   */\n  public open() { this.isVisible = true; }\n\n  /**\n   * close menu\n   */\n  public close() { this.isVisible = false; }\n\n  /**\n   * check closeble\n   * @param element\n   */\n  isInClosableZone(element: HTMLElement) {\n    if (!this.notClosable) { return false; }\n    return this.notClosable.contains(element);\n  }\n\n}\n\n@Directive({ selector: '[md2-menu-open]' })\nexport class Md2MenuOpen implements OnDestroy {\n\n  private close = (event: MouseEvent) => {\n    if (!this.menu.isInClosableZone(<HTMLElement>event.target) &&\n      event.target !== this.elementRef.nativeElement) {\n      this.menu.close();\n      document.removeEventListener('click', this.close);\n    }\n  };\n\n  constructor( @Host() private menu: Md2Menu, private elementRef: ElementRef) { }\n\n  @HostListener('click')\n  private open() {\n    this.menu.open();\n    document.addEventListener('click', this.close, true);\n  }\n\n  ngOnDestroy() {\n    document.removeEventListener('click', this.close);\n  }\n\n}\n\nexport const MD2_MENU_DIRECTIVES: any[] = [Md2MenuNotClosable, Md2Menu, Md2MenuOpen];\n\n@NgModule({\n  imports: [CommonModule],\n  exports: MD2_MENU_DIRECTIVES,\n  declarations: MD2_MENU_DIRECTIVES,\n})\nexport class Md2MenuModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: Md2MenuModule,\n      providers: []\n    };\n  }\n}"]}