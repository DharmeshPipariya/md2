{"version":3,"sources":["toast/toast.ts"],"names":[],"mappings":"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","file":"toast/toast.js","sourcesContent":["import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Injectable,\r\n  Optional,\r\n  ReflectiveInjector,\r\n  ViewContainerRef,\r\n  NgModule,\r\n  ModuleWithProviders\r\n} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport { Md2ToastComponent } from './toast.component';\r\n\r\nexport class Toast {\r\n  id: number;\r\n  constructor(public message: string) { }\r\n}\r\n\r\n@Injectable()\r\nexport class Md2Toast {\r\n  private delay: number = 3000;\r\n  private index: number = 0;\r\n\r\n  container: ComponentRef<any>;\r\n\r\n  constructor(private _componentFactory: ComponentFactoryResolver, private _appRef: ApplicationRef) { }\r\n\r\n  /**\r\n   * toast message\r\n   * @param toast string or object with message and other properties of toast\r\n   */\r\n  toast(toast: string | { message: string, hideDelay: number }) {\r\n    this.show(toast);\r\n  }\r\n\r\n  /**\r\n   * show toast\r\n   * @param toastObj string or object with message and other properties of toast\r\n   */\r\n  show(toastObj: string | { message: string, hideDelay: number }) {\r\n    let toast: Toast;\r\n    if (typeof toastObj === 'string') {\r\n      toast = new Toast(toastObj);\r\n    } else if (typeof toastObj === 'object') {\r\n      toast = new Toast(toastObj.message);\r\n      this.delay = toastObj.hideDelay;\r\n    }\r\n    if (toast) {\r\n      if (!this.container) {\r\n        let app: any = this._appRef;\r\n        let appContainer: ViewContainerRef = app['_rootComponents'][0]['_hostElement'].vcRef;\r\n\r\n        let providers = ReflectiveInjector.resolve([]);\r\n\r\n        let toastFactory = this._componentFactory.resolveComponentFactory(Md2ToastComponent);\r\n        let childInjector = ReflectiveInjector.fromResolvedProviders(providers, appContainer.parentInjector);\r\n        this.container = appContainer.createComponent(toastFactory, appContainer.length, childInjector);\r\n        this.setupToast(toast);\r\n\r\n      } else {\r\n        this.setupToast(toast);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * toast timeout\r\n   * @param toastId\r\n   */\r\n  startTimeout(toastId: number) {\r\n    setTimeout(() => {\r\n      this.clear(toastId);\r\n    }, this.delay);\r\n  }\r\n\r\n  /**\r\n   * setup toast\r\n   * @param toast\r\n   */\r\n  setupToast(toast: Toast) {\r\n    toast.id = ++this.index;\r\n    this.container.instance.add(toast);\r\n    this.startTimeout(toast.id);\r\n  }\r\n\r\n  /**\r\n   * clear specific toast\r\n   * @param toastId\r\n   */\r\n  clear(toastId: number) {\r\n    if (this.container) {\r\n      let instance = this.container.instance;\r\n      instance.remove(toastId);\r\n      if (!instance.hasToast()) {\r\n        this.dispose();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * clear all toasts\r\n   */\r\n  clearAll() {\r\n    if (this.container) {\r\n      let instance = this.container.instance;\r\n      instance.removeAll();\r\n      if (!instance.hasToast()) {\r\n        this.dispose();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * dispose all toasts\r\n   */\r\n  dispose() {\r\n    this.container.destroy();\r\n    this.container = null;\r\n  }\r\n\r\n}\r\n\r\nexport const MD2_TOAST_DIRECTIVES: any[] = [Md2ToastComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: MD2_TOAST_DIRECTIVES,\r\n  exports: MD2_TOAST_DIRECTIVES,\r\n  providers: [Md2Toast],\r\n  entryComponents: MD2_TOAST_DIRECTIVES\r\n})\r\nexport class Md2ToastModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: Md2ToastModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}