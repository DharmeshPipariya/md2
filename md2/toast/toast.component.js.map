{"version":3,"sources":["toast/toast.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;IAAA,qBAUO,eAAe,CAAC,CAAA;IAmCvB;QAAA;YACE,WAAM,GAAY,EAAE,CAAC;YACrB,aAAQ,GAAG,CAAC,CAAC;YACb,YAAO,GAAW,KAAK,CAAC;QAmC1B,CAAC;QAjCC;;;WAGG;QACH,+BAAG,GAAH,UAAI,KAAY;YACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC9D,CAAC;QACH,CAAC;QAED;;;WAGG;QACH,kCAAM,GAAN,UAAO,OAAe;YACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,KAAK,IAAO,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAChF,CAAC;QAED;;;WAGG;QACH,qCAAS,GAAT,UAAU,OAAe;YACvB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACnB,CAAC;QAED;;;WAGG;QACH,oCAAQ,GAAR,cAAsB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QApExD;YAAC,gBAAS,CAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,QAAQ,EAAE,kMAIT;gBACD,MAAM,EAAE,CAAC,moBAGR,CAAC;gBACF,UAAU,EAAE;oBACV,cAAO,CAAC,OAAO,EAAE;wBACf,YAAK,CAAC,KAAK,EAAE,YAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;wBACjD,iBAAU,CAAC,aAAa,EAAE;4BACxB,YAAK,CAAC;gCACJ,OAAO,EAAE,CAAC;gCACV,SAAS,EAAE,OAAO;6BACnB,CAAC;4BACF,cAAO,CAAC,cAAc,CAAC;yBACxB,CAAC;wBACF,iBAAU,CAAC,aAAa,EAAE;4BACxB,cAAO,CAAC,cAAc,EACpB,YAAK,CAAC;gCACJ,OAAO,EAAE,CAAC;gCACV,SAAS,EAAE,OAAO;6BACnB,CAAC,CAAC;yBACN,CAAC;qBACH,CAAC;iBACH;gBACD,aAAa,EAAE,wBAAiB,CAAC,IAAI;aACtC,CAAC;;6BAAA;QAuCF,wBAAC;IAAD,CAtCA,AAsCC,IAAA;IAtCY,yBAAiB,oBAsC7B,CAAA","file":"toast/toast.component.js","sourcesContent":["import {\r\n  Component,\r\n  Inject,\r\n  Optional,\r\n  ViewEncapsulation,\r\n  transition,\r\n  state,\r\n  trigger,\r\n  style,\r\n  animate\r\n} from '@angular/core';\r\nimport { Toast } from './toast';\r\n\r\n@Component({\r\n  selector: 'md2-toast',\r\n  template: `\r\n    <div class=\"md2-toast-wrapper\">\r\n      <div *ngFor=\"let toast of toasts\" class=\"md2-toast\" [@inOut]=\"animate\" (click)=\"remove(toast.id)\">{{toast.message}}</div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .md2-toast-wrapper { position: fixed; top: 0; right: 0; z-index: 1060; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; cursor: default; overflow: hidden; min-width: 304px; padding: 8px; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; }\r\n    .md2-toast { position: relative; padding: 14px 24px; margin-bottom: 5px; display: block; background-color: #323232; color: #fafafa; box-shadow: 0 2px 5px 0 rgba(0,0,0,.26); border-radius: 2px; font-size: 14px; overflow: hidden; -ms-word-wrap: break-word; word-wrap: break-word; transition: all .25s linear; }\r\n  `],\r\n  animations: [\r\n    trigger('inOut', [\r\n      state('top', style({ opacity: 1, marginTop: 0 })),\r\n      transition('void => top', [\r\n        style({\r\n          opacity: 0,\r\n          marginTop: '-53px'\r\n        }),\r\n        animate('0.25s linear')\r\n      ]),\r\n      transition('top => void', [\r\n        animate('0.25s linear',\r\n          style({\r\n            opacity: 0,\r\n            marginTop: '-53px'\r\n          }))\r\n      ]),\r\n    ]),\r\n  ],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class Md2ToastComponent {\r\n  toasts: Toast[] = [];\r\n  maxShown = 5;\r\n  animate: string = 'top';\r\n\r\n  /**\r\n   * add toast\r\n   * @param toast toast object with all parameters\r\n   */\r\n  add(toast: Toast) {\r\n    this.toasts.push(toast);\r\n    if (this.toasts.length > this.maxShown) {\r\n      this.toasts.splice(0, (this.toasts.length - this.maxShown));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * remove toast\r\n   * @param toastId number of toast id\r\n   */\r\n  remove(toastId: number) {\r\n    this.toasts = this.toasts.filter((toast) => { return toast.id !== toastId; });\r\n  }\r\n\r\n  /**\r\n   * remove all toasts\r\n   * @param toastId number of toast id\r\n   */\r\n  removeAll(toastId: number) {\r\n    this.toasts = [];\r\n  }\r\n\r\n  /**\r\n   * check has any toast\r\n   * @return boolean\r\n   */\r\n  hasToast(): boolean { return this.toasts.length > 0; }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}