{"version":3,"sources":["toast/toast.component.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EACL,SAAS,EAGT,iBAAiB,EAClB,MAAM,eAAe;AAiBtB;IAAA;QACE,WAAM,GAAY,EAAE,CAAC;QACrB,aAAQ,GAAG,CAAC,CAAC;IA+Cf,CAAC;IA7CC;;;OAGG;IACH,+BAAG,GAAH,UAAI,KAAY;QAAhB,iBAWC;QAVC,UAAU,CAAC;YACT,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;QACzB,CAAC,EAAE,CAAC,CAAC,CAAC;QACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;YACjC,UAAU,CAAC;gBACT,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC9D,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,kCAAM,GAAN,UAAO,OAAe;QAAtB,iBAKC;QAJC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,CAAM,IAAO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC;YAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;QAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpF,UAAU,CAAC;YACT,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,KAAK,IAAO,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAChF,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED;;;OAGG;IACH,qCAAS,GAAT;QAAA,iBAKC;QAJC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,CAAM,IAAO,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,UAAU,CAAC;YACT,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACnB,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED;;;OAGG;IACH,oCAAQ,GAAR,cAAsB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IA7DxD;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,4MAIT;YACD,MAAM,EAAE,CAAC,quBAIR,CAAC;YACF,aAAa,EAAE,iBAAiB,CAAC,IAAI;SACtC,CAAC;;yBAAA;IAkDF,wBAAC;AAAD,CAjDA,AAiDC,IAAA","file":"toast.component.js","sourcesContent":["import {\n  Component,\n  Inject,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Toast } from './toast';\n\n@Component({\n  selector: 'md2-toast',\n  template: `\n    <div class=\"md2-toast-wrapper\">\n      <div *ngFor=\"let toast of toasts\" class=\"md2-toast\" [class.in]=\"toast.isVisible\" (click)=\"remove(toast.id)\">{{toast.message}}</div>\n    </div>\n  `,\n  styles: [`\n    .md2-toast-wrapper { position: fixed; top: 0; right: 0; z-index: 1060; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; cursor: default; overflow: hidden; min-width: 304px; max-width: 100%; padding: 8px; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; }\n    .md2-toast { position: relative; padding: 14px 24px; margin-bottom: 5px; display: block; margin-top: -53px; opacity: 0; background-color: #323232; color: #fafafa; box-shadow: 0 2px 5px 0 rgba(0,0,0,.26); border-radius: 2px; font-size: 14px; overflow: hidden; -ms-word-wrap: break-word; word-wrap: break-word; transition: all .25s linear; }\n    .md2-toast.in { margin-top: 0; opacity: 1; }\n  `],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Md2ToastComponent {\n  toasts: Toast[] = [];\n  maxShown = 5;\n\n  /**\n   * add toast\n   * @param toast toast object with all parameters\n   */\n  add(toast: Toast) {\n    setTimeout(() => {\n      toast.isVisible = true;\n    }, 1);\n    this.toasts.push(toast);\n    if (this.toasts.length > this.maxShown) {\n      this.toasts[0].isVisible = false;\n      setTimeout(() => {\n        this.toasts.splice(0, (this.toasts.length - this.maxShown));\n      }, 250);\n    }\n  }\n\n  /**\n   * remove toast\n   * @param toastId number of toast id\n   */\n  remove(toastId: number) {\n    this.toasts.forEach((t: any) => { if (t.id === toastId) { t.isVisible = false; } });\n    setTimeout(() => {\n      this.toasts = this.toasts.filter((toast) => { return toast.id !== toastId; });\n    }, 250);\n  }\n\n  /**\n   * remove all toasts\n   * @param toastId number of toast id\n   */\n  removeAll() {\n    this.toasts.forEach((t: any) => { t.isVisible = false; });\n    setTimeout(() => {\n      this.toasts = [];\n    }, 250);\n  }\n\n  /**\n   * check has any toast\n   * @return boolean\n   */\n  hasToast(): boolean { return this.toasts.length > 0; }\n\n}\n"]}