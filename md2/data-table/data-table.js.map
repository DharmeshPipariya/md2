{"version":3,"sources":["data-table/data-table.ts"],"names":[],"mappings":"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","file":"data-table.js","sourcesContent":["import {\n  Component,\n  Directive,\n  Input,\n  EventEmitter,\n  SimpleChange,\n  OnChanges,\n  Optional,\n  DoCheck,\n  NgModule,\n  ModuleWithProviders,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface SortEvent {\n  sortField: string | string[];\n  sortOrder: string\n}\n\nexport interface PageEvent {\n  activePage: number;\n  pageLength: number;\n  dataLength: number;\n}\n\nexport interface DataEvent {\n  length: number;\n}\n\n@Directive({\n  selector: 'table[md2-data]',\n  exportAs: 'Md2DataTable'\n})\nexport class Md2DataTable implements OnChanges, DoCheck {\n\n  public data: any[];\n  public onDataChange = new EventEmitter<DataEvent>();\n  public onSortChange = new EventEmitter<SortEvent>();\n  public onPageChange = new EventEmitter<PageEvent>();\n\n  private sortField: string | string[] = '';\n  private sortOrder = 'asc';\n  private isDataChanged = false;\n\n  @Input('md2-data') inputData: any[] = [];\n  @Input('md2-page-length') pageLength = 1000;\n  @Input('md2-active-page') activePage = 1;\n\n  public getSort(): SortEvent {\n    return { sortField: this.sortField, sortOrder: this.sortOrder };\n  }\n\n  public setSort(sortField: string | string[], sortOrder: string): void {\n    if (this.sortField !== sortField || this.sortOrder !== sortOrder) {\n      this.sortField = sortField;\n      this.sortOrder = sortOrder;\n      this.isDataChanged = true;\n      this.onSortChange.emit({ sortField: sortField, sortOrder: sortOrder });\n    }\n  }\n\n  public getPage(): PageEvent {\n    return { activePage: this.activePage, pageLength: this.pageLength, dataLength: this.inputData.length };\n  }\n\n  public setPage(activePage: number, pageLength: number): void {\n    if (this.pageLength !== pageLength || this.activePage !== activePage) {\n      this.activePage = this.activePage !== activePage ? activePage : this.calculateNewActivePage(this.pageLength, pageLength);\n      this.pageLength = pageLength;\n      this.isDataChanged = true;\n      this.onPageChange.emit({\n        activePage: this.activePage,\n        pageLength: this.pageLength,\n        dataLength: this.inputData.length\n      });\n    }\n  }\n\n  private calculateNewActivePage(previousPageLength: number, currentPageLength: number): number {\n    let firstRowOnPage = (this.activePage - 1) * previousPageLength + 1;\n    let newActivePage = Math.ceil(firstRowOnPage / currentPageLength);\n    return newActivePage;\n  }\n\n  private recalculatePage() {\n    let _lastPage = Math.ceil(this.inputData.length / this.pageLength);\n    this.activePage = _lastPage < this.activePage ? _lastPage : this.activePage;\n    this.activePage = this.activePage || 1;\n  }\n\n  public ngOnChanges(changes: { [key: string]: SimpleChange }): any {\n    if (changes['inputData']) {\n      this.inputData = changes['inputData'].currentValue || [];\n      this.recalculatePage();\n      this.onPageChange.emit({\n        activePage: this.activePage,\n        pageLength: this.pageLength,\n        dataLength: this.inputData.length\n      });\n      this.isDataChanged = true;\n    }\n  }\n\n  public ngDoCheck(): any {\n    if (this.isDataChanged) {\n      this.fillData();\n      this.isDataChanged = false;\n    }\n  }\n\n  private fillData(): void {\n    this.activePage = this.activePage;\n    this.pageLength = this.pageLength;\n\n    let offset = (this.activePage - 1) * this.pageLength;\n    let data = this.inputData;\n    let sortField = this.sortField;\n    if (sortField) {\n      data = data.sort((a, b) => {\n        let x = isNaN(a[sortField + '']) ? a[sortField + ''].toLowerCase() : a[sortField + ''];\n        let y = isNaN(b[sortField + '']) ? b[sortField + ''].toLowerCase() : b[sortField + ''];\n        return (x > y) ? 1 : (y > x) ? -1 : 0;\n      });\n    }\n    if (this.sortOrder === 'desc') { data.reverse(); }\n    this.data = data.slice(offset, offset + this.pageLength);\n  }\n\n  private caseInsensitiveIteratee(sortField: string) {\n    return (row: any): any => {\n      let value = row[sortField];\n      if (value && typeof value === 'string' || value instanceof String) {\n        return value.toLowerCase();\n      }\n      return value;\n    };\n  }\n}\n\n@Component({\n  selector: \"[md2-sort-field]\",\n  template: `\n    <span (click)=\"_sort()\">\n      <ng-content></ng-content>\n      <svg *ngIf=\"isAsc\" width=\"24\"height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 14l5-5 5 5z\"/>\n      </svg>\n      <svg *ngIf=\"isDesc\" width=\"24\"height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 10l5 5 5-5z\"/>\n      </svg>\n      <svg *ngIf=\"!isAsc && !isDesc\" width=\"24\"height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7,10.5l5-5l5,5H7z\"/>\n        <path d=\"M7,12.5l5,5l5-5H7z\"/>\n      </svg>\n    </span>\n  `,\n  styles: [`\n    [md2-sort-field] span { position: relative; display: block; line-height: 24px; white-space: nowrap; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; }\n    [md2-sort-field] span svg { display: inline-block; vertical-align: middle; fill: currentColor; }\n  `],\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2DataTableSortField {\n  private isAsc: boolean = false;\n  private isDesc: boolean = false;\n\n  @Input('md2-sort-field') private sortField: string;\n\n  public constructor(private _md2Table: Md2DataTable) {\n    _md2Table.onSortChange.subscribe((event: SortEvent) => {\n      this.isAsc = (event.sortField === this.sortField && event.sortOrder === \"asc\");\n      this.isDesc = (event.sortField === this.sortField && event.sortOrder === \"desc\");\n    })\n  }\n\n  private _sort() {\n    if (this.isAsc) {\n      this._md2Table.setSort(this.sortField, \"desc\");\n    } else {\n      this._md2Table.setSort(this.sortField, \"asc\");\n    }\n  }\n}\n\n@Component({\n  selector: 'md2-pagination',\n  template: `\n    <ul class=\"md2-pagination\" *ngIf=\"dataLength > _rows\">\n      <li [class.disabled]=\"_activePage <= 1\" (click)=\"_setPage(1)\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/>\n        </svg>\n      </li>\n      <li *ngIf=\"_activePage > 4 && _activePage + 1 > _lastPage\" (click)=\"_setPage(_activePage - 4)\">{{_activePage-4}}</li>\n      <li *ngIf=\"_activePage > 3 && _activePage + 2 > _lastPage\" (click)=\"_setPage(_activePage - 3)\">{{_activePage-3}}</li>\n      <li *ngIf=\"_activePage > 2\" (click)=\"_setPage(_activePage - 2)\">{{_activePage-2}}</li>\n      <li *ngIf=\"_activePage > 1\" (click)=\"_setPage(_activePage - 1)\">{{_activePage-1}}</li>\n      <li class=\"active\">{{_activePage}}</li>\n      <li *ngIf=\"_activePage + 1 <= _lastPage\" (click)=\"_setPage(_activePage + 1)\">{{_activePage+1}}</li>\n      <li *ngIf=\"_activePage + 2 <= _lastPage\" (click)=\"_setPage(_activePage + 2)\">{{_activePage+2}}</li>\n      <li *ngIf=\"_activePage + 3 <= _lastPage && _activePage < 3\" (click)=\"_setPage(_activePage + 3)\">{{_activePage+3}}</li>\n      <li *ngIf=\"_activePage + 4 <= _lastPage && _activePage < 2\" (click)=\"_setPage(_activePage + 4)\">{{_activePage+4}}</li>\n      <li [class.disabled]=\"_activePage >= _lastPage\" (click)=\"_setPage(_lastPage)\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/>\n        </svg>\n      </li>\n    </ul>\n    <div class=\"md2-rows-select\" *ngIf=\"dataLength > _minRows\">\n      Rows per page:\n      <select (change)=\"_setRows($event.target.value)\">\n        <option *ngFor=\"let row of rows\" [selected]=\"_rows===row\">{{row}}</option>\n      </select>\n    </div>\n  `,\n  styles: [`\n    md2-pagination { display: block; color: #0e59a5; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; }\n    md2-pagination:before,\n    md2-pagination:after { display: table; content: ''; }\n    md2-pagination:after { clear: both; }\n    md2-pagination .md2-pagination { display: inline-block; margin: .5rem 0; padding: 0; }\n    md2-pagination .md2-pagination li { position: relative; display: inline-block; width: 36px; vertical-align: top; text-align: center; line-height: 36px; border-radius: 100px; cursor: pointer; box-sizing: border-box; }\n    md2-pagination .md2-pagination li:hover { background: rgba(0,0,0,0.12); }\n    md2-pagination .md2-pagination li.disabled,\n    md2-pagination .md2-pagination li.disabled:hover { pointer-events: none; background: transparent; cursor: default; opacity: .5; }\n    md2-pagination .md2-pagination li.active,\n    md2-pagination .md2-pagination li.active:hover { background: #106CC8; color: #fff; cursor: default; }\n    md2-pagination .md2-pagination li svg { fill: currentColor; margin-bottom: -7px; }\n    md2-pagination .md2-rows-select { display: inline-block; margin: .5rem 0; padding: 0; float: right; color: rgba(0,0,0,.54); line-height: 36px; }\n    md2-pagination .md2-rows-select select { border: 0; outline: 0; }\n  `],\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2Pagination implements OnChanges {\n\n  private _md2Table: Md2DataTable;\n  private _minRows = 0;\n  private _activePage: number;\n  private _rows: number;\n  private _lastPage: number;\n  private dataLength: number = 0;\n\n  @Input('md2-rows') rows: any = [];\n  @Input('md2-table') md2InputTable: Md2DataTable;\n\n  constructor( @Optional() private injectMd2Table: Md2DataTable) { }\n\n  ngOnChanges(changes: any): any {//{ [key: string]: SimpleChange }\n    if (changes.rows) {\n      //this._minRows = _.min(this.rows)\n    }\n    this._md2Table = this.md2InputTable || this.injectMd2Table;\n    this._onPageChange(this._md2Table.getPage());\n    this._md2Table.onPageChange.subscribe(this._onPageChange);\n  }\n\n  private _setPage(page: number): void {\n    this._md2Table.setPage(page, this._rows);\n  }\n\n  private _setRows(rows: number): void {\n    this._md2Table.setPage(this._activePage, rows);\n  }\n\n  private _onPageChange = (event: PageEvent) => {\n    this._activePage = event.activePage;\n    this._rows = event.pageLength;\n    this.dataLength = event.dataLength;\n    this._lastPage = Math.ceil(this.dataLength / this._rows);\n  }\n}\n\nexport const MD2_DATA_TABLE_DIRECTIVES: any[] = [Md2DataTable, Md2DataTableSortField, Md2Pagination];\n\n@NgModule({\n  imports: [CommonModule],\n  exports: MD2_DATA_TABLE_DIRECTIVES,\n  declarations: MD2_DATA_TABLE_DIRECTIVES,\n})\nexport class Md2DataTableModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: Md2DataTableModule,\n      providers: []\n    };\n  }\n}\n"]}