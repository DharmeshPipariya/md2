{"version":3,"file":"colorpicker.js","sourceRoot":"","sources":["../../../src/lib/colorpicker/colorpicker.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  Output,\n  Optional,\n  EventEmitter,\n  Renderer,\n  Self,\n  ViewChildren,\n  QueryList,\n  style,\n  trigger,\n  state,\n  transition,\n  animate,\n  ViewContainerRef,\n  ViewEncapsulation,\n  NgModule,\n  ModuleWithProviders\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NgControl\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport {\n  Overlay,\n  OverlayModule,\n  OverlayState,\n  OverlayRef,\n  Portal,\n  TemplatePortal,\n  PortalModule,\n  TemplatePortalDirective,\n} from '../core';\nimport { coerceBooleanProperty } from '../core/coercion/boolean-property';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ENTER, SPACE } from '../core/keyboard/keycodes';\nimport { ColorLocale, Rgba } from './color-locale';\nimport { Md2ColorSpectrum } from './color-spectrum';\nimport { Md2Slide } from './slide';\n\n/** Change event object emitted by Md2Colorpicker. */\nexport class Md2ColorChange {\n  constructor(public source: Md2Colorpicker, public color: string) { }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'md2-colorpicker',\n  templateUrl: 'colorpicker.html',\n  styleUrls: ['colorpicker.css'],\n  host: {\n    'role': 'colorpicker',\n    '[attr.tabindex]': 'disabled ? -1 : tabindex',\n    '[attr.aria-label]': 'placeholder',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': '_control?.invalid || \"false\"',\n    '[class.md2-colorpicker-disabled]': 'disabled',\n    '(keydown)': '_handleKeydown($event)',\n    '(blur)': '_onBlur()'\n  },\n  animations: [\n    trigger('fadeInContent', [\n      state('showing', style({ opacity: 1 })),\n      transition('void => showing', [\n        style({ opacity: 0 }),\n        animate(`150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)`)\n      ])\n    ])\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2Colorpicker implements OnDestroy, ControlValueAccessor {\n\n  private _portal: TemplatePortal;\n  private _overlayRef: OverlayRef;\n  private _backdropSubscription: Subscription;\n  private _positionSubscription: Subscription;\n\n  /** Whether or not the overlay panel is open. */\n  private _panelOpen = false;\n\n  private _value: string = null;\n  private _color: string = null;\n  _isDark: boolean = false;\n\n  /** Whether filling out the select is required in the form.  */\n  private _required: boolean = false;\n\n  /** Whether the select is disabled.  */\n  private _disabled: boolean = false;\n\n  /** The placeholder displayed in the trigger of the select. */\n  private _placeholder: string;\n\n  _formats: Array<string> = ['hex', 'rgb', 'hsl'];\n\n  _onChange = (value: any) => { };\n  _onTouched = () => { };\n\n  constructor(private _element: ElementRef, private overlay: Overlay,\n    private _viewContainerRef: ViewContainerRef, private _renderer: Renderer,\n    private _locale: ColorLocale, @Self() @Optional() public _control: NgControl) {\n    if (this._control) {\n      this._control.valueAccessor = this;\n    }\n  }\n\n  ngOnDestroy() { this.destroyPanel(); }\n\n  /** Event emitted when the select has been opened. */\n  @Output() onOpen: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the select has been closed. */\n  @Output() onClose: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the selected date has been changed by the user. */\n  @Output() change: EventEmitter<Md2ColorChange> = new EventEmitter<Md2ColorChange>();\n\n  @ViewChildren(TemplatePortalDirective) templatePortals: QueryList<Portal<any>>;\n\n  @Input()\n  get value() { return this._value; }\n  set value(value: string) {\n    if (value && this._value !== value) {\n      this._value = value;\n    } else {\n      this._value = this._locale.defaultValue;\n    }\n    let hsva = this._locale.stringToHsva(this._value);\n    let rgba = this._locale.denormalizeRGBA(this._locale.hsvaToRgba(hsva));\n    let rgbaText = new Rgba(rgba.r, rgba.g, rgba.b, Math.round(rgba.a * 100) / 100);\n    this._value = this._locale.outputFormat(hsva, this._locale.format);\n    if (Math.round((rgbaText.r * 299 + rgbaText.g * 587 + rgbaText.b * 114) / 1000) >= 128\n      || hsva.a < 0.35) {\n      this._isDark = true;\n    } else {\n      this._isDark = false;\n    }\n  }\n\n  @Input()\n  get color() { return this._color; }\n  set color(value: string) { this._color = value; }\n\n  /** Placeholder to be shown if no value has been selected. */\n  @Input()\n  get placeholder() { return this._placeholder; }\n  set placeholder(value: string) { this._placeholder = value; }\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value) { this._required = coerceBooleanProperty(value); }\n\n  /** Whether the component is disabled. */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n  @Input() tabindex: number = 0;\n\n  /** Whether or not the overlay panel is open. */\n  get panelOpen(): boolean { return this._panelOpen; }\n\n  /** Toggles the overlay panel open or closed. */\n  toggle(): void {\n    this.panelOpen ? this.close() : this.open();\n  }\n\n  /** Opens the overlay panel. */\n  open(): void {\n    if (this.disabled) { return; }\n    this._createOverlay();\n    this._overlayRef.attach(this.templatePortals.first);\n    this._subscribeToBackdrop();\n    this._panelOpen = true;\n    this.value = this.color;\n  }\n\n  /** Closes the overlay panel and focuses the host element. */\n  close(): void {\n    this._panelOpen = false;\n    //if (!this._color) {\n    //  this._placeholderState = '';\n    //}\n    this._focusHost();\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n      this._backdropSubscription.unsubscribe();\n    }\n  }\n\n  /** Removes the panel from the DOM. */\n  destroyPanel(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n\n      this._cleanUpSubscriptions();\n    }\n  }\n\n  _handleKeydown(event: KeyboardEvent) {\n    if (this.disabled) { return; }\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this.toggle();\n    }\n  }\n\n  _onBlur() {\n    if (!this.panelOpen) {\n      this._onTouched();\n    }\n  }\n\n  _onPanelDone(): void {\n    if (this.panelOpen) {\n      this._renderer.invokeElementMethod(document.querySelectorAll('.md2-colorpicker-panel')[0], 'focus');\n      this.onOpen.emit();\n    } else {\n      this.onClose.emit();\n    }\n  }\n\n  _setFormat(format: string) {\n    this._locale.format = format;\n    let hsva = this._locale.stringToHsva(this._value);\n    if (this._locale.format === 'hex' && hsva.a < 1) {\n      this._locale.format = 'rgb';\n    }\n    this._value = this._locale.outputFormat(hsva, this._locale.format);\n  }\n\n  _spectrumColorChange(event: string) {\n    this.value = event;\n  }\n\n  _clearValue(event: Event) {\n    event.stopPropagation();\n    this.color = null;\n  }\n\n  _onClickOk(): void {\n    this.color = this.value;\n    this._emitChangeEvent();\n    this.close();\n  }\n\n  /** Emits an event when the user selects a color. */\n  _emitChangeEvent(): void {\n    this._onChange(this.color);\n    this.change.emit(new Md2ColorChange(this, this.color));\n  }\n\n  writeValue(value: any): void {\n    this.color = value;\n  }\n\n  registerOnChange(fn: (value: any) => void): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => {}): void { this._onTouched = fn; }\n\n  /** Focuses the host element when the panel closes. */\n  private _focusHost(): void {\n    this._renderer.invokeElementMethod(this._element.nativeElement, 'focus');\n  }\n\n  private _subscribeToBackdrop(): void {\n    this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\n      this.close();\n    });\n  }\n\n  /**\n   *  This method creates the overlay from the provided panel's template and saves its\n   *  OverlayRef so that it can be attached to the DOM when open is called.\n   */\n  private _createOverlay(): void {\n    if (!this._overlayRef) {\n      let config = new OverlayState();\n      config.positionStrategy = this.overlay.position()\n        .global()\n        .centerHorizontally()\n        .centerVertically();\n      config.hasBackdrop = true;\n      config.backdropClass = 'cdk-overlay-dark-backdrop';\n\n      this._overlayRef = this.overlay.create(config);\n    }\n  }\n\n  private _cleanUpSubscriptions(): void {\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n    }\n    if (this._positionSubscription) {\n      this._positionSubscription.unsubscribe();\n    }\n  }\n\n}\n\nexport const MD2_COLORPICKER_DIRECTIVES = [Md2Colorpicker, Md2Slide, Md2ColorSpectrum];\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, PortalModule],\n  exports: MD2_COLORPICKER_DIRECTIVES,\n  declarations: MD2_COLORPICKER_DIRECTIVES,\n})\nexport class Md2ColorpickerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: Md2ColorpickerModule,\n      providers: [ColorLocale]\n    };\n  }\n}\n"]}