{"version":3,"sources":["accordion/accordiontab.ts"],"names":[],"mappings":"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","file":"accordiontab.js","sourcesContent":["import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Md2Accordion } from './accordionpanel';\n\n@Component({\n  moduleId: module.id,\n  selector: 'md2-accordion-tab',\n  template: `\n    <div class=\"md2-accordion-header\" (click)=\"toggle($event)\">\n      <span class=\"md2-accordion-title\">{{header}}</span>\n      <span class=\"md2-accordion-header-icon\"></span>\n    </div>\n    <div class=\"md2-accordion-tab-content\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styles: [`\n    .md2-accordion-tab { position: relative; display: block; outline: 0; border: 0; border-width: 1px 0; border-style: solid; border-color: transparent; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }\n    .md2-accordion-tab.md2-accordion-tab-active { border-color: rgba(0, 0, 0, 0.12); }\n    .md2-accordion-tab .md2-accordion-header { position: relative; border-radius: 0; color: rgba(0, 0, 0, 0.54); font-weight: 500; cursor: pointer; display: block; align-items: inherit; line-height: 40px; margin: 0; max-height: 40px; overflow: hidden; padding: 0 35px 0 16px; text-align: left; text-decoration: none; white-space: nowrap; width: 100%; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -webkit-user-drag: none; }\n    .md2-accordion-tab.md2-accordion-tab-disabled .md2-accordion-header { color: rgba(0,0,0,0.26); pointer-events: none; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -webkit-user-drag: none; opacity: 0.5; cursor: default; }\n    .md2-accordion-tab .md2-accordion-title { color: rgba(0,0,0,0.85); }\n    .md2-accordion-tab.md2-accordion-tab-active .md2-accordion-title { color: #106cc8; }\n    .md2-accordion-tab .md2-accordion-header-icon { position: absolute; top: 12px; right: 17px; width: 8px; height: 8px; overflow: hidden; display: inline-block; border-width: 0 2px 2px 0; border-style: solid; border-color: rgba(0, 0, 0, 0.54); -moz-transform: rotate(45deg); -ms-transform: rotate(45deg); -o-transform: rotate(45deg); -webkit-transform: rotate(45deg); transform: rotate(45deg); -moz-transition: 0.3s ease-in-out; -o-transition: 0.3s ease-in-out; -webkit-transition: 0.3s ease-in-out; transition: 0.3s ease-in-out; }\n    .md2-accordion-tab.md2-accordion-tab-active .md2-accordion-header-icon { -moz-transform: rotate(225deg); -ms-transform: rotate(225deg); -o-transform: rotate(225deg); -webkit-transform: rotate(225deg); transform: rotate(225deg); top: 16px; }\n    .md2-accordion-tab .md2-accordion-tab-content { position: relative; display: none; padding: 16px; }\n    .md2-accordion-tab.md2-accordion-tab-active .md2-accordion-tab-content { display: block; }\n  `],\n  host: {\n    'role': 'accordion-tab',\n    '[class]': 'class',\n    '[class.md2-accordion-tab]': 'true',\n    '[class.md2-accordion-tab-active]': 'active',\n    '[class.md2-accordion-tab-disabled]': 'disabled'\n  },\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2AccordionTab {\n\n  @Input() class: string = '';\n\n  @Input() header: string;\n\n  @Input() active: boolean;\n\n  @Input() disabled: boolean;\n\n  constructor(private accordion: Md2Accordion) {\n    this.accordion.addTab(this);\n  }\n\n  /**\n   * Toggle the accordion\n   * @param event\n   * @return if it is disabled\n   */\n  toggle(event: Event) {\n    if (this.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    let index = this.findTabIndex();\n\n    if (this.active) {\n      this.active = !this.active;\n      this.accordion.close.emit({ originalEvent: event, index: index });\n    } else if (!this.accordion.multiple) {\n      for (let i = 0; i < this.accordion.tabs.length; i++) {\n        this.accordion.tabs[i].active = false;\n      }\n      this.active = true;\n      this.accordion.open.emit({ originalEvent: event, index: index });\n    } else {\n      this.active = true;\n      this.accordion.open.emit({ originalEvent: event, index: index });\n    }\n\n    event.preventDefault();\n  }\n\n  /**\n   * Find index of specific tab of accordion\n   * @return index number of this tab\n   */\n  findTabIndex() {\n    let index = -1;\n    for (let i = 0; i < this.accordion.tabs.length; i++) {\n      if (this.accordion.tabs[i] === this) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  }\n}\n"]}