{"version":3,"sources":["tooltip/tooltip.component.ts"],"names":[],"mappings":"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","file":"tooltip/tooltip.component.js","sourcesContent":["import {\r\n  AfterViewInit,\r\n  Component,\r\n  ChangeDetectorRef,\r\n  ElementRef,\r\n  HostBinding,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Md2TooltipOptions } from './tooltip.options';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md2-tooltip',\r\n  template: `\r\n    <div class=\"md2-tooltip-container\" [class.md2-tooltip-visible]=\"_isVisible\" [ngStyle]=\"{top: top, left: left}\">\r\n      <div class=\"md2-tooltip\" [innerHTML]=\"message\"></div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .md2-tooltip-container { position: fixed; z-index: 1070; overflow: hidden; pointer-events: none; border-radius: 4px; font-weight: 500; font-style: normal; font-size: 10px; display: block; color: rgb(255,255,255); -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -moz-backface-visibility: hidden; -webkit-backface-visibility: hidden; backface-visibility: hidden; }\r\n    md2-tooltip .md2-tooltip { position: relative; margin: 5px; color: #fff; text-align: center; opacity: 0; max-width: 200px; background-color: rgba(97, 97, 97, 0.9); border-radius: 4px; line-height: 1.5; padding: 4px 12px; -moz-transition: all .2s cubic-bezier(.25,.8,.25,1); -o-transition: all .2s cubic-bezier(.25,.8,.25,1); -webkit-transition: all .2s cubic-bezier(.25,.8,.25,1); transition: all .2s cubic-bezier(.25,.8,.25,1); -moz-transform-origin: center top; -ms-transform-origin: center top; -o-transform-origin: center top; -webkit-transform-origin: center top; transform-origin: center top; -moz-transform: scale(0); -ms-transform: scale(0); -o-transform: scale(0); -webkit-transform: scale(0); transform: scale(0); }\r\n    md2-tooltip.before .md2-tooltip { -moz-transform-origin: center right; -ms-transform-origin: center right; -o-transform-origin: center right; -webkit-transform-origin: center right; transform-origin: center right; }    \r\n    md2-tooltip.after .md2-tooltip { -moz-transform-origin: center left; -ms-transform-origin: center left; -o-transform-origin: center left; -webkit-transform-origin: center left; transform-origin: center left; }\r\n    md2-tooltip.above .md2-tooltip { -moz-transform-origin: center bottom; -ms-transform-origin: center bottom; -o-transform-origin: center bottom; -webkit-transform-origin: center bottom; transform-origin: center bottom; }\r\n    .md2-tooltip-visible .md2-tooltip { opacity: 1; -moz-transform: scale(1); -ms-transform: scale(1); -o-transform: scale(1); -webkit-transform: scale(1); transform: scale(1); }\r\n  `],\r\n  host: {\r\n    'role': 'tooltip',\r\n    '[class]': 'position'\r\n  },\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class Md2TooltipComponent implements AfterViewInit {\r\n  private _isVisible: boolean;\r\n  private top: string = '-1000px';\r\n  private left: string = '-1000px';\r\n  private message: string;\r\n  private position: string;\r\n  private hostEl: ElementRef;\r\n\r\n  constructor(private _element: ElementRef, private _changeDetector: ChangeDetectorRef, options: Md2TooltipOptions) {\r\n    Object.assign(this, options);\r\n    this._isVisible = false;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let _position = this.positionElements(this.hostEl.nativeElement, this._element.nativeElement.children[0], this.position);\r\n    this.top = _position.top + 'px';\r\n    this.left = _position.left + 'px';\r\n    this._isVisible = true;\r\n    this._changeDetector.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * calculate position of target element\r\n   * @param hostEl host element\r\n   * @param targetEl targer element\r\n   * @param position position\r\n   * @return {top: number, left: number} object of top, left properties\r\n   */\r\n  private positionElements(hostEl: HTMLElement, targetEl: HTMLElement, position: string): { top: number, left: number } {\r\n    let positionStrParts = position.split('-');\r\n    let pos0 = positionStrParts[0];\r\n    let pos1 = positionStrParts[1] || 'center';\r\n    let hostElPos = this.offset(hostEl);\r\n    let targetElWidth = targetEl.offsetWidth;\r\n    let targetElHeight = targetEl.offsetHeight;\r\n    let shiftWidth: any = {\r\n      center: hostElPos.left + hostElPos.width / 2 - targetElWidth / 2,\r\n      before: hostElPos.left,\r\n      after: hostElPos.left + hostElPos.width\r\n    };\r\n\r\n    let shiftHeight: any = {\r\n      center: hostElPos.top + hostElPos.height / 2 - targetElHeight / 2,\r\n      above: hostElPos.top,\r\n      below: hostElPos.top + hostElPos.height\r\n    };\r\n\r\n    let targetElPos: { top: number, left: number };\r\n    switch (pos0) {\r\n      case 'before':\r\n        targetElPos = {\r\n          top: shiftHeight[pos1],\r\n          left: (hostElPos.left - targetElWidth)// > 0 ? (hostElPos.left - targetElWidth) : (hostElPos.width + hostElPos.left)\r\n        };\r\n        break;\r\n      case 'after':\r\n        targetElPos = {\r\n          top: shiftHeight[pos1],\r\n          left: shiftWidth[pos0]\r\n        };\r\n        break;\r\n      case 'above':\r\n        targetElPos = {\r\n          top: hostElPos.top - targetElHeight,\r\n          left: shiftWidth[pos1]\r\n        };\r\n        break;\r\n      default:\r\n        targetElPos = {\r\n          top: shiftHeight[pos0],\r\n          left: shiftWidth[pos1]\r\n        };\r\n        break;\r\n    }\r\n    return targetElPos;\r\n  }\r\n\r\n  /**\r\n   * calculate offset of target element\r\n   * @param nativeEl element\r\n   * @return {width: number, height: number,top: number, left: number} object of with, height, top, left properties\r\n   */\r\n  private offset(nativeEl: any): { width: number, height: number, top: number, left: number } {\r\n    let boundingClientRect = nativeEl.getBoundingClientRect();\r\n    return {\r\n      width: boundingClientRect.width || nativeEl.offsetWidth,\r\n      height: boundingClientRect.height || nativeEl.offsetHeight,\r\n      top: boundingClientRect.top + (this.window.pageYOffset || this.document.documentElement.scrollTop) - this.document.body.scrollTop,\r\n      left: boundingClientRect.left + (this.window.pageXOffset || this.document.documentElement.scrollLeft) - this.document.body.scrollLeft\r\n    };\r\n  }\r\n\r\n  private get window(): Window { return window; }\r\n\r\n  private get document(): Document { return window.document; }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}